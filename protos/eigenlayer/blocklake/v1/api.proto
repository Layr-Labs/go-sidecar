syntax = "proto3";

package eigenlayer.blocklake.api.v1;

option go_package = "github.com/Layr-Labs/sidecar/protos/eigenlayer/api/v1";

import "google/api/annotations.proto";

message HelloRequest {
  string name = 1;
}

message HelloResponse {
  string message = 1;
}

service Api {
  rpc SayHello (HelloRequest) returns (HelloResponse) {
    option (google.api.http) = {
      post: "/v1/hello"
      body: "*"
    };
  }
}

enum BackfillType {
  BACKFILL_TYPE_UNSPECIFIED = 0;
  BACKFILL_TYPE_FULL = 1;
  BACKFILL_TYPE_RANGE = 2;
  BACKFILL_TYPE_CURRENT_TO_TIP = 3;
  BACKFILL_TYPE_REPROCESS_LOGS_RANGE = 4;
  BACKFILL_TYPE_RESTAKED_STRATEGIES_RANGE = 5;
}

message BackfillRange {
  uint64 from = 1;
  uint64 to = 2;
}

message BackfillRequest {
  BackfillType backfillType = 1;
  BackfillRange range = 2;
  bool queue = 3;
  bool reindex = 4;
}

message BackfillResponse {
}

message IndexContractsRequest {
  BackfillRange range = 1;
}

message IndexContractsResponse {}

message ReIndexTransactionsForContractRequest {
  string contractAddress = 1;
}

message ReIndexTransactionsForContractResponse {}

message ReIndexRestakedStrategiesRequest {
  BackfillRange range = 1;
  uint64 mod = 2;
}

message ReIndexRestakedStrategiesResponse {}

service Backfiller {
  rpc StartBackfill(BackfillRequest) returns (BackfillResponse) {
    option (google.api.http) = {
      post: "/v1/backfill"
      body: "*"
    };
  }
  rpc IndexContracts(IndexContractsRequest) returns (IndexContractsResponse) {
    option (google.api.http) = {
      post: "/v1/index-contracts"
      body: "*"
    };
  }
  rpc ReIndexTransactionsForContract(ReIndexTransactionsForContractRequest) returns (ReIndexTransactionsForContractResponse) {
    option (google.api.http) = {
      post: "/v1/reindex-transactions-for-contract"
      body: "*"
    };
  }
  rpc ReIndexRestakedStrategies(ReIndexRestakedStrategiesRequest) returns (ReIndexRestakedStrategiesResponse) {
    option (google.api.http) = {
      post: "/v1/reindex-restaked-strategies"
      body: "*"
    };
  }
}
