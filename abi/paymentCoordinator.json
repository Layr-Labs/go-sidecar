{
	"abi": [
		{
			"type": "constructor",
			"inputs": [
				{
					"name": "_delegationManager",
					"type": "address",
					"internalType": "contract IDelegationManager"
				},
				{
					"name": "_strategyManager",
					"type": "address",
					"internalType": "contract IStrategyManager"
				},
				{
					"name": "_CALCULATION_INTERVAL_SECONDS",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "_MAX_PAYMENT_DURATION",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "_MAX_RETROACTIVE_LENGTH",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "_MAX_FUTURE_LENGTH",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "_GENESIS_PAYMENT_TIMESTAMP",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "CALCULATION_INTERVAL_SECONDS",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "GENESIS_PAYMENT_TIMESTAMP",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "MAX_FUTURE_LENGTH",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "MAX_PAYMENT_DURATION",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "MAX_RETROACTIVE_LENGTH",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "activationDelay",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "beaconChainETHStrategy",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "contract IStrategy"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "calculateEarnerLeafHash",
			"inputs": [
				{
					"name": "leaf",
					"type": "tuple",
					"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
					"components": [
						{
							"name": "earner",
							"type": "address",
							"internalType": "address"
						},
						{
							"name": "earnerTokenRoot",
							"type": "bytes32",
							"internalType": "bytes32"
						}
					]
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"stateMutability": "pure"
		},
		{
			"type": "function",
			"name": "calculateTokenLeafHash",
			"inputs": [
				{
					"name": "leaf",
					"type": "tuple",
					"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf",
					"components": [
						{
							"name": "token",
							"type": "address",
							"internalType": "contract IERC20"
						},
						{
							"name": "cumulativeEarnings",
							"type": "uint256",
							"internalType": "uint256"
						}
					]
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"stateMutability": "pure"
		},
		{
			"type": "function",
			"name": "checkClaim",
			"inputs": [
				{
					"name": "claim",
					"type": "tuple",
					"internalType": "struct IPaymentCoordinator.PaymentMerkleClaim",
					"components": [
						{
							"name": "rootIndex",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "earnerIndex",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "earnerTreeProof",
							"type": "bytes",
							"internalType": "bytes"
						},
						{
							"name": "earnerLeaf",
							"type": "tuple",
							"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
							"components": [
								{
									"name": "earner",
									"type": "address",
									"internalType": "address"
								},
								{
									"name": "earnerTokenRoot",
									"type": "bytes32",
									"internalType": "bytes32"
								}
							]
						},
						{
							"name": "tokenIndices",
							"type": "uint32[]",
							"internalType": "uint32[]"
						},
						{
							"name": "tokenTreeProofs",
							"type": "bytes[]",
							"internalType": "bytes[]"
						},
						{
							"name": "tokenLeaves",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf[]",
							"components": [
								{
									"name": "token",
									"type": "address",
									"internalType": "contract IERC20"
								},
								{
									"name": "cumulativeEarnings",
									"type": "uint256",
									"internalType": "uint256"
								}
							]
						}
					]
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "claimerFor",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "cumulativeClaimed",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "",
					"type": "address",
					"internalType": "contract IERC20"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "currPaymentCalculationEndTimestamp",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "delegationManager",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "contract IDelegationManager"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "distributionRoots",
			"inputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [
				{
					"name": "root",
					"type": "bytes32",
					"internalType": "bytes32"
				},
				{
					"name": "paymentCalculationEndTimestamp",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "activatedAt",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "domainSeparator",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "getDistributionRootsLength",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "getRootIndexFromHash",
			"inputs": [
				{
					"name": "rootHash",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "globalOperatorCommissionBips",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint16",
					"internalType": "uint16"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "initialize",
			"inputs": [
				{
					"name": "initialOwner",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "_pauserRegistry",
					"type": "address",
					"internalType": "contract IPauserRegistry"
				},
				{
					"name": "initialPausedStatus",
					"type": "uint256",
					"internalType": "uint256"
				},
				{
					"name": "_paymentUpdater",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "_activationDelay",
					"type": "uint32",
					"internalType": "uint32"
				},
				{
					"name": "_globalCommissionBips",
					"type": "uint16",
					"internalType": "uint16"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "isPayAllForRangeSubmitter",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "isRangePaymentForAllHash",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "isRangePaymentHash",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "",
					"type": "bytes32",
					"internalType": "bytes32"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "operatorCommissionBips",
			"inputs": [
				{
					"name": "operator",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "avs",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint16",
					"internalType": "uint16"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "owner",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "pause",
			"inputs": [
				{
					"name": "newPausedStatus",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "pauseAll",
			"inputs": [],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "paused",
			"inputs": [
				{
					"name": "index",
					"type": "uint8",
					"internalType": "uint8"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "paused",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "pauserRegistry",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "contract IPauserRegistry"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "payAllForRange",
			"inputs": [
				{
					"name": "rangePayments",
					"type": "tuple[]",
					"internalType": "struct IPaymentCoordinator.RangePayment[]",
					"components": [
						{
							"name": "strategiesAndMultipliers",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
							"components": [
								{
									"name": "strategy",
									"type": "address",
									"internalType": "contract IStrategy"
								},
								{
									"name": "multiplier",
									"type": "uint96",
									"internalType": "uint96"
								}
							]
						},
						{
							"name": "token",
							"type": "address",
							"internalType": "contract IERC20"
						},
						{
							"name": "amount",
							"type": "uint256",
							"internalType": "uint256"
						},
						{
							"name": "startTimestamp",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "duration",
							"type": "uint32",
							"internalType": "uint32"
						}
					]
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "payForRange",
			"inputs": [
				{
					"name": "rangePayments",
					"type": "tuple[]",
					"internalType": "struct IPaymentCoordinator.RangePayment[]",
					"components": [
						{
							"name": "strategiesAndMultipliers",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
							"components": [
								{
									"name": "strategy",
									"type": "address",
									"internalType": "contract IStrategy"
								},
								{
									"name": "multiplier",
									"type": "uint96",
									"internalType": "uint96"
								}
							]
						},
						{
							"name": "token",
							"type": "address",
							"internalType": "contract IERC20"
						},
						{
							"name": "amount",
							"type": "uint256",
							"internalType": "uint256"
						},
						{
							"name": "startTimestamp",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "duration",
							"type": "uint32",
							"internalType": "uint32"
						}
					]
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "paymentNonce",
			"inputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [
				{
					"name": "",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "paymentUpdater",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "address"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "processClaim",
			"inputs": [
				{
					"name": "claim",
					"type": "tuple",
					"internalType": "struct IPaymentCoordinator.PaymentMerkleClaim",
					"components": [
						{
							"name": "rootIndex",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "earnerIndex",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "earnerTreeProof",
							"type": "bytes",
							"internalType": "bytes"
						},
						{
							"name": "earnerLeaf",
							"type": "tuple",
							"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
							"components": [
								{
									"name": "earner",
									"type": "address",
									"internalType": "address"
								},
								{
									"name": "earnerTokenRoot",
									"type": "bytes32",
									"internalType": "bytes32"
								}
							]
						},
						{
							"name": "tokenIndices",
							"type": "uint32[]",
							"internalType": "uint32[]"
						},
						{
							"name": "tokenTreeProofs",
							"type": "bytes[]",
							"internalType": "bytes[]"
						},
						{
							"name": "tokenLeaves",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf[]",
							"components": [
								{
									"name": "token",
									"type": "address",
									"internalType": "contract IERC20"
								},
								{
									"name": "cumulativeEarnings",
									"type": "uint256",
									"internalType": "uint256"
								}
							]
						}
					]
				},
				{
					"name": "recipient",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "renounceOwnership",
			"inputs": [],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setActivationDelay",
			"inputs": [
				{
					"name": "_activationDelay",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setClaimerFor",
			"inputs": [
				{
					"name": "claimer",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setGlobalOperatorCommission",
			"inputs": [
				{
					"name": "_globalCommissionBips",
					"type": "uint16",
					"internalType": "uint16"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setPauserRegistry",
			"inputs": [
				{
					"name": "newPauserRegistry",
					"type": "address",
					"internalType": "contract IPauserRegistry"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setPayAllForRangeSubmitter",
			"inputs": [
				{
					"name": "_submitter",
					"type": "address",
					"internalType": "address"
				},
				{
					"name": "_newValue",
					"type": "bool",
					"internalType": "bool"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "setPaymentUpdater",
			"inputs": [
				{
					"name": "_paymentUpdater",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "strategyManager",
			"inputs": [],
			"outputs": [
				{
					"name": "",
					"type": "address",
					"internalType": "contract IStrategyManager"
				}
			],
			"stateMutability": "view"
		},
		{
			"type": "function",
			"name": "submitRoot",
			"inputs": [
				{
					"name": "root",
					"type": "bytes32",
					"internalType": "bytes32"
				},
				{
					"name": "paymentCalculationEndTimestamp",
					"type": "uint32",
					"internalType": "uint32"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "transferOwnership",
			"inputs": [
				{
					"name": "newOwner",
					"type": "address",
					"internalType": "address"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "unpause",
			"inputs": [
				{
					"name": "newPausedStatus",
					"type": "uint256",
					"internalType": "uint256"
				}
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "event",
			"name": "ActivationDelaySet",
			"inputs": [
				{
					"name": "oldActivationDelay",
					"type": "uint32",
					"indexed": false,
					"internalType": "uint32"
				},
				{
					"name": "newActivationDelay",
					"type": "uint32",
					"indexed": false,
					"internalType": "uint32"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "ClaimerForSet",
			"inputs": [
				{
					"name": "earner",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "oldClaimer",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "claimer",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "DistributionRootSubmitted",
			"inputs": [
				{
					"name": "rootIndex",
					"type": "uint32",
					"indexed": true,
					"internalType": "uint32"
				},
				{
					"name": "root",
					"type": "bytes32",
					"indexed": true,
					"internalType": "bytes32"
				},
				{
					"name": "paymentCalculationEndTimestamp",
					"type": "uint32",
					"indexed": true,
					"internalType": "uint32"
				},
				{
					"name": "activatedAt",
					"type": "uint32",
					"indexed": false,
					"internalType": "uint32"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "GlobalCommissionBipsSet",
			"inputs": [
				{
					"name": "oldGlobalCommissionBips",
					"type": "uint16",
					"indexed": false,
					"internalType": "uint16"
				},
				{
					"name": "newGlobalCommissionBips",
					"type": "uint16",
					"indexed": false,
					"internalType": "uint16"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "Initialized",
			"inputs": [
				{
					"name": "version",
					"type": "uint8",
					"indexed": false,
					"internalType": "uint8"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "OwnershipTransferred",
			"inputs": [
				{
					"name": "previousOwner",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "newOwner",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "Paused",
			"inputs": [
				{
					"name": "account",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "newPausedStatus",
					"type": "uint256",
					"indexed": false,
					"internalType": "uint256"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "PauserRegistrySet",
			"inputs": [
				{
					"name": "pauserRegistry",
					"type": "address",
					"indexed": false,
					"internalType": "contract IPauserRegistry"
				},
				{
					"name": "newPauserRegistry",
					"type": "address",
					"indexed": false,
					"internalType": "contract IPauserRegistry"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "PayAllForRangeSubmitterSet",
			"inputs": [
				{
					"name": "payAllForRangeSubmitter",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "oldValue",
					"type": "bool",
					"indexed": true,
					"internalType": "bool"
				},
				{
					"name": "newValue",
					"type": "bool",
					"indexed": true,
					"internalType": "bool"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "PaymentClaimed",
			"inputs": [
				{
					"name": "root",
					"type": "bytes32",
					"indexed": false,
					"internalType": "bytes32"
				},
				{
					"name": "earner",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "claimer",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "recipient",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "token",
					"type": "address",
					"indexed": false,
					"internalType": "contract IERC20"
				},
				{
					"name": "claimedAmount",
					"type": "uint256",
					"indexed": false,
					"internalType": "uint256"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "PaymentUpdaterSet",
			"inputs": [
				{
					"name": "oldPaymentUpdater",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "newPaymentUpdater",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "RangePaymentCreated",
			"inputs": [
				{
					"name": "avs",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "paymentNonce",
					"type": "uint256",
					"indexed": true,
					"internalType": "uint256"
				},
				{
					"name": "rangePaymentHash",
					"type": "bytes32",
					"indexed": true,
					"internalType": "bytes32"
				},
				{
					"name": "rangePayment",
					"type": "tuple",
					"indexed": false,
					"internalType": "struct IPaymentCoordinator.RangePayment",
					"components": [
						{
							"name": "strategiesAndMultipliers",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
							"components": [
								{
									"name": "strategy",
									"type": "address",
									"internalType": "contract IStrategy"
								},
								{
									"name": "multiplier",
									"type": "uint96",
									"internalType": "uint96"
								}
							]
						},
						{
							"name": "token",
							"type": "address",
							"internalType": "contract IERC20"
						},
						{
							"name": "amount",
							"type": "uint256",
							"internalType": "uint256"
						},
						{
							"name": "startTimestamp",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "duration",
							"type": "uint32",
							"internalType": "uint32"
						}
					]
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "RangePaymentForAllCreated",
			"inputs": [
				{
					"name": "submitter",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "paymentNonce",
					"type": "uint256",
					"indexed": true,
					"internalType": "uint256"
				},
				{
					"name": "rangePaymentHash",
					"type": "bytes32",
					"indexed": true,
					"internalType": "bytes32"
				},
				{
					"name": "rangePayment",
					"type": "tuple",
					"indexed": false,
					"internalType": "struct IPaymentCoordinator.RangePayment",
					"components": [
						{
							"name": "strategiesAndMultipliers",
							"type": "tuple[]",
							"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
							"components": [
								{
									"name": "strategy",
									"type": "address",
									"internalType": "contract IStrategy"
								},
								{
									"name": "multiplier",
									"type": "uint96",
									"internalType": "uint96"
								}
							]
						},
						{
							"name": "token",
							"type": "address",
							"internalType": "contract IERC20"
						},
						{
							"name": "amount",
							"type": "uint256",
							"internalType": "uint256"
						},
						{
							"name": "startTimestamp",
							"type": "uint32",
							"internalType": "uint32"
						},
						{
							"name": "duration",
							"type": "uint32",
							"internalType": "uint32"
						}
					]
				}
			],
			"anonymous": false
		},
		{
			"type": "event",
			"name": "Unpaused",
			"inputs": [
				{
					"name": "account",
					"type": "address",
					"indexed": true,
					"internalType": "address"
				},
				{
					"name": "newPausedStatus",
					"type": "uint256",
					"indexed": false,
					"internalType": "uint256"
				}
			],
			"anonymous": false
		}
	],
	"bytecode": {
		"object": "0x6101806040523480156200001257600080fd5b5060405162003e7338038062003e738339810160408190526200003591620002e4565b868686868686866200004885826200037e565b63ffffffff1615620000ed5760405162461bcd60e51b815260206004820152606060248201527f5061796d656e74436f6f7264696e61746f723a2047454e455349535f5041594d60448201527f454e545f54494d455354414d50206d7573742062652061206d756c7469706c6560648201527f206f662043414c43554c4154494f4e5f494e54455256414c5f5345434f4e4453608482015260a4015b60405180910390fd5b620000fc62015180866200037e565b63ffffffff16156200019d5760405162461bcd60e51b815260206004820152605760248201527f5061796d656e74436f6f7264696e61746f723a2043414c43554c4154494f4e5f60448201527f494e54455256414c5f5345434f4e4453206d7573742062652061206d756c746960648201527f706c65206f6620534e415053484f545f434144454e4345000000000000000000608482015260a401620000e4565b6001600160a01b0396871661012052949095166101405263ffffffff92831660805290821660a052811660c05291821660e0521661010052620001df620001f2565b5050466101605250620003b09350505050565b600054610100900460ff16156200025c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608401620000e4565b60005460ff9081161015620002af576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114620002c757600080fd5b50565b805163ffffffff81168114620002df57600080fd5b919050565b600080600080600080600060e0888a0312156200030057600080fd5b87516200030d81620002b1565b60208901519097506200032081620002b1565b95506200033060408901620002ca565b94506200034060608901620002ca565b93506200035060808901620002ca565b92506200036060a08901620002ca565b91506200037060c08901620002ca565b905092959891949750929550565b600063ffffffff80841680620003a457634e487b7160e01b600052601260045260246000fd5b92169190910692915050565b60805160a05160c05160e05161010051610120516101405161016051613a2c620004476000396000611a1701526000818161044f0152612300015260006106e7015260008181610401015261214b01526000818161029401526121e901526000818161042801526120fa0152600081816107210152611ea001526000818161061301528181611f4901526120110152613a2c6000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c806367ef85851161015c578063c8371b46116100ce578063ec1680de11610087578063ec1680de14610709578063ee6195971461071c578063f2fde38b14610743578063f698da2514610756578063f8cd84481461075e578063fabc1cbc1461077157600080fd5b8063c8371b461461065b578063d4540a5514610689578063d588cefa1461069c578063e221b245146106bc578063e810ce21146106cf578063ea4d3c9b146106e257600080fd5b8063886f119511610120578063886f1195146105cf5780638da5cb5b146105e25780639104c319146105f35780639d45c2811461060e578063a0169ddd14610635578063b57152841461064857600080fd5b806367ef85851461054f578063715018a61461056657806373f2fbea1461056e5780637b8f8b051461059c578063865c6953146105a457600080fd5b806337838ed011610200578063595c6a67116101b9578063595c6a67146104c15780635971b3f8146104c95780635ac86ab7146104fe5780635c975abb146105215780635e9d83481461052957806366d3b16b1461053c57600080fd5b806337838ed01461042357806339b70e381461044a5780633a8c0786146104715780633ccc861d146104885780633efe1db61461049b57806358baaa3e146104ae57600080fd5b8063149bc87211610252578063149bc8721461035357806318190f53146103745780631b4455161461038757806322f19a641461039a5780632b9f64a4146103bb5780632cfd45eb146103fc57600080fd5b806304a0c5021461028f578063092db007146102d057806310d67a2f146102f8578063136439dd1461030d578063146cd61d14610320575b600080fd5b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b60cb546102e590600160e01b900461ffff1681565b60405161ffff90911681526020016102c7565b61030b6103063660046130e7565b610784565b005b61030b61031b366004613104565b610840565b61034361032e3660046130e7565b60d16020526000908152604090205460ff1681565b60405190151581526020016102c7565b610366610361366004613135565b61097f565b6040519081526020016102c7565b61030b6103823660046130e7565b6109f5565b61030b610395366004613151565b610a06565b6102e56103a83660046131c6565b505060cb54600160e01b900461ffff1690565b6103e46103c93660046130e7565b60cc602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b6103e47f000000000000000000000000000000000000000000000000000000000000000081565b60cb546102b690600160a01b900463ffffffff1681565b61030b610496366004613212565b610bda565b61030b6104a9366004613272565b610f8f565b61030b6104bc36600461329e565b61128f565b61030b6112a0565b6104dc6104d7366004613104565b611367565b6040805193845263ffffffff92831660208501529116908201526060016102c7565b61034361050c3660046132b9565b606654600160ff9092169190911b9081161490565b606654610366565b6103436105373660046132dc565b6113a7565b60cb546103e4906001600160a01b031681565b60cb546102b690600160c01b900463ffffffff1681565b61030b611425565b61034361057c366004613311565b60d060209081526000928352604080842090915290825290205460ff1681565b60ca54610366565b6103666105b23660046131c6565b60cd60209081526000928352604080842090915290825290205481565b6065546103e4906001600160a01b031681565b6033546001600160a01b03166103e4565b6103e473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b61030b6106433660046130e7565b611439565b61030b610656366004613151565b611498565b610343610669366004613311565b60cf60209081526000928352604080842090915290825290205460ff1681565b61030b61069736600461335a565b6116e0565b6103666106aa3660046130e7565b60ce6020526000908152604090205481565b61030b6106ca3660046133cd565b611828565b6102b66106dd366004613104565b611839565b6103e47f000000000000000000000000000000000000000000000000000000000000000081565b61030b6107173660046133f6565b61191b565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b61030b6107513660046130e7565b61199d565b610366611a13565b61036661076c366004613135565b611a51565b61030b61077f366004613104565b611a62565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190613424565b6001600160a01b0316336001600160a01b0316146108345760405162461bcd60e51b815260040161082b90613441565b60405180910390fd5b61083d81611bbe565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac919061348b565b6108c85760405162461bcd60e51b815260040161082b906134a8565b606654818116146109415760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161082b565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008061098f60208401846130e7565b83602001356040516020016109d89392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b6109fd611cb5565b61083d81611d0f565b60665460009060019081161415610a2f5760405162461bcd60e51b815260040161082b906134f0565b60026097541415610a525760405162461bcd60e51b815260040161082b90613527565b600260975560005b82811015610bcf5736848483818110610a7557610a7561355e565b9050602002810190610a879190613574565b33600081815260ce60209081526040808320549051949550939192610ab292909185918791016136b9565b60408051601f19818403018152918152815160209283012033600090815260cf845282812082825290935291205490915060ff1615610b035760405162461bcd60e51b815260040161082b906136e9565b610b0c83611d6b565b33600090815260cf602090815260408083208484529091529020805460ff19166001908117909155610b3f908390613758565b33600081815260ce602052604090819020929092559051829184917f2a0659fa4c38e0075469a0e0dd737e045dc316ffd6cb6e68755c119ee0882aea90610b87908890613770565b60405180910390a4610bb9333060408601803590610ba890602089016130e7565b6001600160a01b03169291906124a6565b5050508080610bc790613783565b915050610a5a565b505060016097555050565b60665460029060049081161415610c035760405162461bcd60e51b815260040161082b906134f0565b60026097541415610c265760405162461bcd60e51b815260040161082b90613527565b6002609755600060ca610c3c602086018661329e565b63ffffffff1681548110610c5257610c5261355e565b6000918252602091829020604080516060810182526002909302909101805483526001015463ffffffff808216948401949094526401000000009004909216918101919091529050610ca48482612517565b6000610cb660808601606087016130e7565b6001600160a01b03808216600090815260cc60205260409020549192501680610cdc5750805b336001600160a01b03821614610d5a5760405162461bcd60e51b815260206004820152603c60248201527f5061796d656e74436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063616c6c6572206973206e6f742076616c696420636c61696d657200000000606482015260840161082b565b60005b610d6a60a088018861379e565b9050811015610f815736610d8160e08901896137ef565b83818110610d9157610d9161355e565b6001600160a01b038716600090815260cd602090815260408083209302949094019450929091508290610dc6908501856130e7565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905080826020013511610e805760405162461bcd60e51b815260206004820152605560248201527f5061796d656e74436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063756d756c61746976654561726e696e6773206d75737420626520677420746064820152741a185b8818dd5b5d5b185d1a5d9950db185a5b5959605a1b608482015260a40161082b565b6000610e90826020850135613839565b6001600160a01b038716600090815260cd60209081526040822092935085018035929190610ebe90876130e7565b6001600160a01b0316815260208082019290925260400160002091909155610f00908a908390610ef0908701876130e7565b6001600160a01b031691906127c0565b86516001600160a01b03808b1691878216918916907fbff1e5a32b3f6d3b3c0a7e675ead2091fea820852f35a77abdd6d2420bec477890610f4460208901896130e7565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a45050508080610f7990613783565b915050610d5d565b505060016097555050505050565b60665460039060089081161415610fb85760405162461bcd60e51b815260040161082b906134f0565b60cb546001600160a01b0316331461102f5760405162461bcd60e51b815260206004820152603460248201527f5061796d656e74436f6f7264696e61746f723a2063616c6c6572206973206e6f6044820152733a103a3432903830bcb6b2b73a2ab83230ba32b960611b606482015260840161082b565b60cb5463ffffffff600160c01b9091048116908316116110cb5760405162461bcd60e51b815260206004820152604b60248201527f5061796d656e74436f6f7264696e61746f722e7375626d6974526f6f743a206e60448201527f657720726f6f74206d75737420626520666f72206e657765722063616c63756c60648201526a185d1959081c195c9a5bd960aa1b608482015260a40161082b565b428263ffffffff16106111645760405162461bcd60e51b815260206004820152605560248201527f5061796d656e74436f6f7264696e61746f722e7375626d6974526f6f743a207060448201527f61796d656e7443616c63756c6174696f6e456e6454696d657374616d702063616064820152746e6e6f7420626520696e207468652066757475726560581b608482015260a40161082b565b60ca5460cb5460009061118490600160a01b900463ffffffff1642613850565b6040805160608101825287815263ffffffff878116602080840182815286841685870181815260ca805460018101825560009190915296517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029098029788015591517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee29096018054925196861667ffffffffffffffff19909316929092176401000000009686169690960295909517905560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b611297611cb5565b61083d816127f0565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156112e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130c919061348b565b6113285760405162461bcd60e51b815260040161082b906134a8565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60ca818154811061137757600080fd5b60009182526020909120600290910201805460019091015490915063ffffffff8082169164010000000090041683565b600061141d8260ca6113bc602083018361329e565b63ffffffff16815481106113d2576113d261355e565b6000918252602091829020604080516060810182526002909302909101805483526001015463ffffffff80821694840194909452640100000000900490921691810191909152612517565b506001919050565b61142d611cb5565b6114376000612861565b565b33600081815260cc602052604080822080546001600160a01b031981166001600160a01b038781169182179093559251911692839185917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca31291a4505050565b606654600190600290811614156114c15760405162461bcd60e51b815260040161082b906134f0565b33600090815260d1602052604090205460ff166115515760405162461bcd60e51b815260206004820152604260248201527f5061796d656e74436f6f7264696e61746f723a2063616c6c6572206973206e6f60448201527f7420612076616c696420706179416c6c466f7252616e6765207375626d69747460648201526132b960f11b608482015260a40161082b565b600260975414156115745760405162461bcd60e51b815260040161082b90613527565b600260975560005b82811015610bcf57368484838181106115975761159761355e565b90506020028101906115a99190613574565b33600081815260ce602090815260408083205490519495509391926115d492909185918791016136b9565b60408051601f19818403018152918152815160209283012033600090815260d0845282812082825290935291205490915060ff16156116255760405162461bcd60e51b815260040161082b906136e9565b61162e83611d6b565b33600090815260d0602090815260408083208484529091529020805460ff19166001908117909155611661908390613758565b33600081815260ce602052604090819020929092559051829184917fbc0782940ec5871f66c5490ef957f44d19a9adac1dac18b946ad0dd6579c30d6906116a9908890613770565b60405180910390a46116ca333060408601803590610ba890602089016130e7565b50505080806116d890613783565b91505061157c565b600054610100900460ff16158080156117005750600054600160ff909116105b8061171a5750303b15801561171a575060005460ff166001145b61177d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161082b565b6000805460ff1916600117905580156117a0576000805461ff0019166101001790555b6117a86128b3565b60c9556117b5868661294a565b6117be87612861565b6117c784611d0f565b6117d0836127f0565b6117d982612a34565b801561181f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b611830611cb5565b61083d81612a34565b60ca546000905b63ffffffff8116156118ac578260ca61185a600184613878565b63ffffffff16815481106118705761187061355e565b906000526020600020906002020160000154141561189a57611893600182613878565b9392505050565b806118a48161389d565b915050611840565b5060405162461bcd60e51b815260206004820152603760248201527f5061796d656e74436f6f7264696e61746f722e676574526f6f74496e6465784660448201527f726f6d486173683a20726f6f74206e6f7420666f756e64000000000000000000606482015260840161082b565b611923611cb5565b6001600160a01b038216600081815260d1602052604080822054905160ff9091169284151592841515927f17b06be02af2803593116eb96121b9c6e8bee1cc1b145e7c31c19c180e86189b9190a4506001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b6119a5611cb5565b6001600160a01b038116611a0a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161082b565b61083d81612861565b60007f0000000000000000000000000000000000000000000000000000000000000000461415611a44575060c95490565b611a4c6128b3565b905090565b6000600161098f60208401846130e7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad99190613424565b6001600160a01b0316336001600160a01b031614611b095760405162461bcd60e51b815260040161082b90613441565b606654198119606654191614611b875760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161082b565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610974565b6001600160a01b038116611c4c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161082b565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146114375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161082b565b60cb546040516001600160a01b038084169216907f07d2890b3eb1206e7c3cb6bf8d46da31385ace3ce99abf85e5b690c83aa4967890600090a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611d7782806137ef565b905011611dcf5760405162461bcd60e51b815260206004820152603260248201526000805160206139d7833981519152604482015271081b9bc81cdd1c985d1959da595cc81cd95d60721b606482015260840161082b565b6000816040013511611e2d5760405162461bcd60e51b815260206004820152603360248201526000805160206139d7833981519152604482015272020616d6f756e742063616e6e6f74206265203606c1b606482015260840161082b565b6f4b3b4ca85a86c47a098a223fffffffff81604001351115611e995760405162461bcd60e51b815260206004820152603160248201526000805160206139d783398151915260448201527020616d6f756e7420746f6f206c6172676560781b606482015260840161082b565b63ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ed060a083016080840161329e565b63ffffffff161115611f475760405162461bcd60e51b815260206004820152604660248201526000805160206139d783398151915260448201527f206475726174696f6e2065786365656473204d41585f5041594d454e545f44556064820152652920aa24a7a760d11b608482015260a40161082b565b7f0000000000000000000000000000000000000000000000000000000000000000611f7860a083016080840161329e565b611f8291906138d3565b63ffffffff161561200f5760405162461bcd60e51b815260206004820152605c60248201526000805160206139d783398151915260448201527f206475726174696f6e206d7573742062652061206d756c7469706c65206f662060648201527f43414c43554c4154494f4e5f494e54455256414c5f5345434f4e445300000000608482015260a40161082b565b7f0000000000000000000000000000000000000000000000000000000000000000612040608083016060840161329e565b61204a91906138d3565b63ffffffff16156120e25760405162461bcd60e51b815260206004820152606260248201526000805160206139d783398151915260448201527f20737461727454696d657374616d70206d7573742062652061206d756c74697060648201527f6c65206f662043414c43554c4154494f4e5f494e54455256414c5f5345434f4e608482015261445360f01b60a482015260c40161082b565b6120f2608082016060830161329e565b63ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff164261212a9190613839565b111580156121735750612143608082016060830161329e565b63ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b6121df5760405162461bcd60e51b815260206004820152604360248201526000805160206139d783398151915260448201527f20737461727454696d657374616d7020746f6f2066617220696e207468652070606482015262185cdd60ea1b608482015260a40161082b565b61220f63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613758565b61221f608083016060840161329e565b63ffffffff1611156122955760405162461bcd60e51b815260206004820152604560248201526000805160206139d783398151915260448201527f20737461727454696d657374616d7020746f6f2066617220696e207468652066606482015264757475726560d81b608482015260a40161082b565b6000805b6122a383806137ef565b90508110156124a15760006122b884806137ef565b838181106122c8576122c861355e565b6122de92602060409092020190810191506130e7565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa158015612349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236d919061348b565b8061239457506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b6123f45760405162461bcd60e51b815260206004820152603c60248201526000805160206139d783398151915260448201527f20696e76616c696420737472617465677920636f6e7369646572656400000000606482015260840161082b565b806001600160a01b0316836001600160a01b03161061248f5760405162461bcd60e51b815260206004820152605b60248201526000805160206139d783398151915260448201527f2073747261746567696573206d75737420626520696e20617363656e64696e6760648201527f206f7264657220746f2068616e646c65206475706c6963617465730000000000608482015260a40161082b565b915061249a81613783565b9050612299565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526125119085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a9f565b50505050565b806040015163ffffffff164210156125905760405162461bcd60e51b815260206004820152603660248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a206044820152751c9bdbdd081b9bdd081858dd1a5d985d1959081e595d60521b606482015260840161082b565b61259d60c083018361379e565b90506125ac60a084018461379e565b9050146126365760405162461bcd60e51b815260206004820152604c60248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a2060448201527f746f6b656e496e646963657320616e6420746f6b656e50726f6f6673206c656e60648201526b0cee8d040dad2e6dac2e8c6d60a31b608482015260a40161082b565b61264360e08301836137ef565b905061265260c084018461379e565b9050146126da5760405162461bcd60e51b815260206004820152604a60248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a2060448201527f746f6b656e5472656550726f6f667320616e64206c6561766573206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a40161082b565b8051612706906126f0604085016020860161329e565b6126fd60408601866138f6565b86606001612b71565b60005b61271660a084018461379e565b90508110156124a1576127b0608084013561273460a086018661379e565b848181106127445761274461355e565b9050602002016020810190612759919061329e565b61276660c087018761379e565b858181106127765761277661355e565b905060200281019061278891906138f6565b61279560e08901896137ef565b878181106127a5576127a561355e565b905060400201612ce5565b6127b981613783565b9050612709565b6040516001600160a01b0383166024820152604481018290526124a190849063a9059cbb60e01b906064016124da565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6065546001600160a01b031615801561296b57506001600160a01b03821615155b6129ed5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161082b565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2612a3082611bbe565b5050565b60cb546040805161ffff600160e01b9093048316815291831660208301527f8cdc428b0431b82d1619763f443a48197db344ba96905f3949643acd1c863a06910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b6000612af4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e369092919063ffffffff16565b8051909150156124a15780806020019051810190612b12919061348b565b6124a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161082b565b612b7c60208361393d565b6001901b8463ffffffff1610612c065760405162461bcd60e51b815260206004820152604360248201527f5061796d656e74436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e65724c656166496e6064820152620c8caf60eb1b608482015260a40161082b565b6000612c118261097f565b9050612c5c84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92508591505063ffffffff8916612e4d565b612cdd5760405162461bcd60e51b815260206004820152604660248201527f5061796d656e74436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e657220636c61696d60648201526510383937b7b360d11b608482015260a40161082b565b505050505050565b612cf060208361393d565b6001901b8463ffffffff1610612d6e5760405162461bcd60e51b815260206004820152603c60248201527f5061796d656e74436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e4c656166496e64657800000000606482015260840161082b565b6000612d7982611a51565b9050612dc484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92508591505063ffffffff8916612e4d565b612cdd5760405162461bcd60e51b815260206004820152603f60248201527f5061796d656e74436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e20636c61696d2070726f6f6600606482015260840161082b565b6060612e458484600085612e65565b949350505050565b600083612e5b868585612f96565b1495945050505050565b606082471015612ec65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161082b565b6001600160a01b0385163b612f1d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161082b565b600080866001600160a01b03168587604051612f39919061397d565b60006040518083038185875af1925050503d8060008114612f76576040519150601f19603f3d011682016040523d82523d6000602084013e612f7b565b606091505b5091509150612f8b828286613099565b979650505050505050565b600060208451612fa6919061398f565b1561302d5760405162461bcd60e51b815260206004820152604b60248201527f4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f664b65636360448201527f616b3a2070726f6f66206c656e6774682073686f756c642062652061206d756c60648201526a3a34b836329037b310199960a91b608482015260a40161082b565b8260205b855181116130905761304460028561398f565b6130655781600052808601516020526040600020915060028404935061307e565b8086015160005281602052604060002091506002840493505b613089602082613758565b9050613031565b50949350505050565b606083156130a8575081611893565b8251156130b85782518084602001fd5b8160405162461bcd60e51b815260040161082b91906139a3565b6001600160a01b038116811461083d57600080fd5b6000602082840312156130f957600080fd5b8135611893816130d2565b60006020828403121561311657600080fd5b5035919050565b60006040828403121561312f57600080fd5b50919050565b60006040828403121561314757600080fd5b611893838361311d565b6000806020838503121561316457600080fd5b823567ffffffffffffffff8082111561317c57600080fd5b818501915085601f83011261319057600080fd5b81358181111561319f57600080fd5b8660208260051b85010111156131b457600080fd5b60209290920196919550909350505050565b600080604083850312156131d957600080fd5b82356131e4816130d2565b915060208301356131f4816130d2565b809150509250929050565b6000610100828403121561312f57600080fd5b6000806040838503121561322557600080fd5b823567ffffffffffffffff81111561323c57600080fd5b613248858286016131ff565b92505060208301356131f4816130d2565b803563ffffffff8116811461326d57600080fd5b919050565b6000806040838503121561328557600080fd5b8235915061329560208401613259565b90509250929050565b6000602082840312156132b057600080fd5b61189382613259565b6000602082840312156132cb57600080fd5b813560ff8116811461189357600080fd5b6000602082840312156132ee57600080fd5b813567ffffffffffffffff81111561330557600080fd5b612e45848285016131ff565b6000806040838503121561332457600080fd5b823561332f816130d2565b946020939093013593505050565b803561326d816130d2565b803561ffff8116811461326d57600080fd5b60008060008060008060c0878903121561337357600080fd5b863561337e816130d2565b9550602087013561338e816130d2565b94506040870135935060608701356133a5816130d2565b92506133b360808801613259565b91506133c160a08801613348565b90509295509295509295565b6000602082840312156133df57600080fd5b61189382613348565b801515811461083d57600080fd5b6000806040838503121561340957600080fd5b8235613414816130d2565b915060208301356131f4816133e8565b60006020828403121561343657600080fd5b8151611893816130d2565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60006020828403121561349d57600080fd5b8151611893816133e8565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261358a57600080fd5b9190910192915050565b818352600060208085019450826000805b868110156135f95782356135b8816130d2565b6001600160a01b03168852828401356bffffffffffffffffffffffff81168082146135e1578384fd5b898601525060409788019792909201916001016135a5565b50959695505050505050565b60008135601e1983360301811261361b57600080fd5b8201803567ffffffffffffffff81111561363457600080fd5b8060061b360384131561364657600080fd5b60a0855261365b60a086018260208501613594565b91505061366a6020840161333d565b6001600160a01b031660208501526040838101359085015261368e60608401613259565b63ffffffff1660608501526136a560808401613259565b63ffffffff81166080860152509392505050565b60018060a01b03841681528260208201526060604082015260006136e06060830184613605565b95945050505050565b60208082526045908201526000805160206139d783398151915260408201527f2072616e6765207061796d656e74206861736820616c7265616479207375626d6060820152641a5d1d195960da1b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561376b5761376b613742565b500190565b6020815260006118936020830184613605565b600060001982141561379757613797613742565b5060010190565b6000808335601e198436030181126137b557600080fd5b83018035915067ffffffffffffffff8211156137d057600080fd5b6020019150600581901b36038213156137e857600080fd5b9250929050565b6000808335601e1984360301811261380657600080fd5b83018035915067ffffffffffffffff82111561382157600080fd5b6020019150600681901b36038213156137e857600080fd5b60008282101561384b5761384b613742565b500390565b600063ffffffff80831681851680830382111561386f5761386f613742565b01949350505050565b600063ffffffff8381169083168181101561389557613895613742565b039392505050565b600063ffffffff8216806138b3576138b3613742565b6000190192915050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff808416806138ea576138ea6138bd565b92169190910692915050565b6000808335601e1984360301811261390d57600080fd5b83018035915067ffffffffffffffff82111561392857600080fd5b6020019150368190038213156137e857600080fd5b60008261394c5761394c6138bd565b500490565b60005b8381101561396c578181015183820152602001613954565b838111156125115750506000910152565b6000825161358a818460208701613951565b60008261399e5761399e6138bd565b500690565b60208152600082518060208401526139c2816040850160208701613951565b601f01601f1916919091016040019291505056fe5061796d656e74436f6f7264696e61746f722e5f706179466f7252616e67653aa2646970667358221220230c33f5c3e5597aea966c344062b55bba8c024d05ba89d85105a679402443f564736f6c634300080c0033",
		"sourceMap": "1065:23433:104:-:0;;;3109:689;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3466:18;3498:16;3528:29;3571:21;3606:23;3643:18;3675:26;4596:58:105;3528:29:104;3675:26;4596:58:105;:::i;:::-;:63;;;4575:206;;;;-1:-1:-1;;;4575:206:105;;1732:2:229;4575:206:105;;;1714:21:229;1771:2;1751:18;;;1744:30;1810:34;1790:18;;;1783:62;1881:34;1861:18;;;1854:62;1953:34;1932:19;;;1925:63;2005:19;;4575:206:105;;;;;;;;;4812:48;1825:6;4812:29;:48;:::i;:::-;:53;;;4791:187;;;;-1:-1:-1;;;4791:187:105;;2237:2:229;4791:187:105;;;2219:21:229;2276:2;2256:18;;;2249:30;2315:34;2295:18;;;2288:62;2386:34;2366:18;;;2359:62;2458:25;2437:19;;;2430:54;2501:19;;4791:187:105;2035:491:229;4791:187:105;-1:-1:-1;;;;;4988:38:105;;;;;5036:34;;;;;;5080:60;;;;;;5150:44;;;-1:-1:-1;5150:44:105;5204:48;;-1:-1:-1;5204:48:105;5262:38;;;;;5310:54;;;3726:22:104::1;:20;:22::i;:::-;-1:-1:-1::0;;3778:13:104::1;3758:33;::::0;-1:-1:-1;1065:23433:104;;-1:-1:-1;;;;1065:23433:104;5388:279:40;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:40;;2733:2:229;5447:66:40;;;2715:21:229;2772:2;2752:18;;;2745:30;2811:34;2791:18;;;2784:62;-1:-1:-1;;;2862:18:229;;;2855:37;2909:19;;5447:66:40;2531:403:229;5447:66:40;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:40;5588:15;5573:30;;;;;;5622:28;;3081:36:229;;;5622:28:40;;3069:2:229;3054:18;5622:28:40;;;;;;;5523:138;5388:279::o;14:151:229:-;-1:-1:-1;;;;;109:31:229;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:898::-;515:6;523;531;539;547;555;563;616:3;604:9;595:7;591:23;587:33;584:53;;;633:1;630;623:12;584:53;665:9;659:16;684:51;729:5;684:51;:::i;:::-;804:2;789:18;;783:25;754:5;;-1:-1:-1;817:53:229;783:25;817:53;:::i;:::-;889:7;-1:-1:-1;915:48:229;959:2;944:18;;915:48;:::i;:::-;905:58;;982:48;1026:2;1015:9;1011:18;982:48;:::i;:::-;972:58;;1049:49;1093:3;1082:9;1078:19;1049:49;:::i;:::-;1039:59;;1117:49;1161:3;1150:9;1146:19;1117:49;:::i;:::-;1107:59;;1185:49;1229:3;1218:9;1214:19;1185:49;:::i;:::-;1175:59;;342:898;;;;;;;;;;:::o;1245:280::-;1276:1;1302:10;1339:2;1336:1;1332:10;1361:3;1351:134;;1407:10;1402:3;1398:20;1395:1;1388:31;1442:4;1439:1;1432:15;1470:4;1467:1;1460:15;1351:134;1503:10;;1499:20;;;;;1245:280;-1:-1:-1;;1245:280:229:o;2939:184::-;1065:23433:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
		"linkReferences": {}
	},
	"deployedBytecode": {
		"object": "0x608060405234801561001057600080fd5b506004361061028a5760003560e01c806367ef85851161015c578063c8371b46116100ce578063ec1680de11610087578063ec1680de14610709578063ee6195971461071c578063f2fde38b14610743578063f698da2514610756578063f8cd84481461075e578063fabc1cbc1461077157600080fd5b8063c8371b461461065b578063d4540a5514610689578063d588cefa1461069c578063e221b245146106bc578063e810ce21146106cf578063ea4d3c9b146106e257600080fd5b8063886f119511610120578063886f1195146105cf5780638da5cb5b146105e25780639104c319146105f35780639d45c2811461060e578063a0169ddd14610635578063b57152841461064857600080fd5b806367ef85851461054f578063715018a61461056657806373f2fbea1461056e5780637b8f8b051461059c578063865c6953146105a457600080fd5b806337838ed011610200578063595c6a67116101b9578063595c6a67146104c15780635971b3f8146104c95780635ac86ab7146104fe5780635c975abb146105215780635e9d83481461052957806366d3b16b1461053c57600080fd5b806337838ed01461042357806339b70e381461044a5780633a8c0786146104715780633ccc861d146104885780633efe1db61461049b57806358baaa3e146104ae57600080fd5b8063149bc87211610252578063149bc8721461035357806318190f53146103745780631b4455161461038757806322f19a641461039a5780632b9f64a4146103bb5780632cfd45eb146103fc57600080fd5b806304a0c5021461028f578063092db007146102d057806310d67a2f146102f8578063136439dd1461030d578063146cd61d14610320575b600080fd5b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b60cb546102e590600160e01b900461ffff1681565b60405161ffff90911681526020016102c7565b61030b6103063660046130e7565b610784565b005b61030b61031b366004613104565b610840565b61034361032e3660046130e7565b60d16020526000908152604090205460ff1681565b60405190151581526020016102c7565b610366610361366004613135565b61097f565b6040519081526020016102c7565b61030b6103823660046130e7565b6109f5565b61030b610395366004613151565b610a06565b6102e56103a83660046131c6565b505060cb54600160e01b900461ffff1690565b6103e46103c93660046130e7565b60cc602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b6103e47f000000000000000000000000000000000000000000000000000000000000000081565b60cb546102b690600160a01b900463ffffffff1681565b61030b610496366004613212565b610bda565b61030b6104a9366004613272565b610f8f565b61030b6104bc36600461329e565b61128f565b61030b6112a0565b6104dc6104d7366004613104565b611367565b6040805193845263ffffffff92831660208501529116908201526060016102c7565b61034361050c3660046132b9565b606654600160ff9092169190911b9081161490565b606654610366565b6103436105373660046132dc565b6113a7565b60cb546103e4906001600160a01b031681565b60cb546102b690600160c01b900463ffffffff1681565b61030b611425565b61034361057c366004613311565b60d060209081526000928352604080842090915290825290205460ff1681565b60ca54610366565b6103666105b23660046131c6565b60cd60209081526000928352604080842090915290825290205481565b6065546103e4906001600160a01b031681565b6033546001600160a01b03166103e4565b6103e473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b61030b6106433660046130e7565b611439565b61030b610656366004613151565b611498565b610343610669366004613311565b60cf60209081526000928352604080842090915290825290205460ff1681565b61030b61069736600461335a565b6116e0565b6103666106aa3660046130e7565b60ce6020526000908152604090205481565b61030b6106ca3660046133cd565b611828565b6102b66106dd366004613104565b611839565b6103e47f000000000000000000000000000000000000000000000000000000000000000081565b61030b6107173660046133f6565b61191b565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b61030b6107513660046130e7565b61199d565b610366611a13565b61036661076c366004613135565b611a51565b61030b61077f366004613104565b611a62565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190613424565b6001600160a01b0316336001600160a01b0316146108345760405162461bcd60e51b815260040161082b90613441565b60405180910390fd5b61083d81611bbe565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac919061348b565b6108c85760405162461bcd60e51b815260040161082b906134a8565b606654818116146109415760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161082b565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008061098f60208401846130e7565b83602001356040516020016109d89392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b6109fd611cb5565b61083d81611d0f565b60665460009060019081161415610a2f5760405162461bcd60e51b815260040161082b906134f0565b60026097541415610a525760405162461bcd60e51b815260040161082b90613527565b600260975560005b82811015610bcf5736848483818110610a7557610a7561355e565b9050602002810190610a879190613574565b33600081815260ce60209081526040808320549051949550939192610ab292909185918791016136b9565b60408051601f19818403018152918152815160209283012033600090815260cf845282812082825290935291205490915060ff1615610b035760405162461bcd60e51b815260040161082b906136e9565b610b0c83611d6b565b33600090815260cf602090815260408083208484529091529020805460ff19166001908117909155610b3f908390613758565b33600081815260ce602052604090819020929092559051829184917f2a0659fa4c38e0075469a0e0dd737e045dc316ffd6cb6e68755c119ee0882aea90610b87908890613770565b60405180910390a4610bb9333060408601803590610ba890602089016130e7565b6001600160a01b03169291906124a6565b5050508080610bc790613783565b915050610a5a565b505060016097555050565b60665460029060049081161415610c035760405162461bcd60e51b815260040161082b906134f0565b60026097541415610c265760405162461bcd60e51b815260040161082b90613527565b6002609755600060ca610c3c602086018661329e565b63ffffffff1681548110610c5257610c5261355e565b6000918252602091829020604080516060810182526002909302909101805483526001015463ffffffff808216948401949094526401000000009004909216918101919091529050610ca48482612517565b6000610cb660808601606087016130e7565b6001600160a01b03808216600090815260cc60205260409020549192501680610cdc5750805b336001600160a01b03821614610d5a5760405162461bcd60e51b815260206004820152603c60248201527f5061796d656e74436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063616c6c6572206973206e6f742076616c696420636c61696d657200000000606482015260840161082b565b60005b610d6a60a088018861379e565b9050811015610f815736610d8160e08901896137ef565b83818110610d9157610d9161355e565b6001600160a01b038716600090815260cd602090815260408083209302949094019450929091508290610dc6908501856130e7565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905080826020013511610e805760405162461bcd60e51b815260206004820152605560248201527f5061796d656e74436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063756d756c61746976654561726e696e6773206d75737420626520677420746064820152741a185b8818dd5b5d5b185d1a5d9950db185a5b5959605a1b608482015260a40161082b565b6000610e90826020850135613839565b6001600160a01b038716600090815260cd60209081526040822092935085018035929190610ebe90876130e7565b6001600160a01b0316815260208082019290925260400160002091909155610f00908a908390610ef0908701876130e7565b6001600160a01b031691906127c0565b86516001600160a01b03808b1691878216918916907fbff1e5a32b3f6d3b3c0a7e675ead2091fea820852f35a77abdd6d2420bec477890610f4460208901896130e7565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a45050508080610f7990613783565b915050610d5d565b505060016097555050505050565b60665460039060089081161415610fb85760405162461bcd60e51b815260040161082b906134f0565b60cb546001600160a01b0316331461102f5760405162461bcd60e51b815260206004820152603460248201527f5061796d656e74436f6f7264696e61746f723a2063616c6c6572206973206e6f6044820152733a103a3432903830bcb6b2b73a2ab83230ba32b960611b606482015260840161082b565b60cb5463ffffffff600160c01b9091048116908316116110cb5760405162461bcd60e51b815260206004820152604b60248201527f5061796d656e74436f6f7264696e61746f722e7375626d6974526f6f743a206e60448201527f657720726f6f74206d75737420626520666f72206e657765722063616c63756c60648201526a185d1959081c195c9a5bd960aa1b608482015260a40161082b565b428263ffffffff16106111645760405162461bcd60e51b815260206004820152605560248201527f5061796d656e74436f6f7264696e61746f722e7375626d6974526f6f743a207060448201527f61796d656e7443616c63756c6174696f6e456e6454696d657374616d702063616064820152746e6e6f7420626520696e207468652066757475726560581b608482015260a40161082b565b60ca5460cb5460009061118490600160a01b900463ffffffff1642613850565b6040805160608101825287815263ffffffff878116602080840182815286841685870181815260ca805460018101825560009190915296517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029098029788015591517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee29096018054925196861667ffffffffffffffff19909316929092176401000000009686169690960295909517905560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b611297611cb5565b61083d816127f0565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156112e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130c919061348b565b6113285760405162461bcd60e51b815260040161082b906134a8565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60ca818154811061137757600080fd5b60009182526020909120600290910201805460019091015490915063ffffffff8082169164010000000090041683565b600061141d8260ca6113bc602083018361329e565b63ffffffff16815481106113d2576113d261355e565b6000918252602091829020604080516060810182526002909302909101805483526001015463ffffffff80821694840194909452640100000000900490921691810191909152612517565b506001919050565b61142d611cb5565b6114376000612861565b565b33600081815260cc602052604080822080546001600160a01b031981166001600160a01b038781169182179093559251911692839185917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca31291a4505050565b606654600190600290811614156114c15760405162461bcd60e51b815260040161082b906134f0565b33600090815260d1602052604090205460ff166115515760405162461bcd60e51b815260206004820152604260248201527f5061796d656e74436f6f7264696e61746f723a2063616c6c6572206973206e6f60448201527f7420612076616c696420706179416c6c466f7252616e6765207375626d69747460648201526132b960f11b608482015260a40161082b565b600260975414156115745760405162461bcd60e51b815260040161082b90613527565b600260975560005b82811015610bcf57368484838181106115975761159761355e565b90506020028101906115a99190613574565b33600081815260ce602090815260408083205490519495509391926115d492909185918791016136b9565b60408051601f19818403018152918152815160209283012033600090815260d0845282812082825290935291205490915060ff16156116255760405162461bcd60e51b815260040161082b906136e9565b61162e83611d6b565b33600090815260d0602090815260408083208484529091529020805460ff19166001908117909155611661908390613758565b33600081815260ce602052604090819020929092559051829184917fbc0782940ec5871f66c5490ef957f44d19a9adac1dac18b946ad0dd6579c30d6906116a9908890613770565b60405180910390a46116ca333060408601803590610ba890602089016130e7565b50505080806116d890613783565b91505061157c565b600054610100900460ff16158080156117005750600054600160ff909116105b8061171a5750303b15801561171a575060005460ff166001145b61177d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161082b565b6000805460ff1916600117905580156117a0576000805461ff0019166101001790555b6117a86128b3565b60c9556117b5868661294a565b6117be87612861565b6117c784611d0f565b6117d0836127f0565b6117d982612a34565b801561181f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b611830611cb5565b61083d81612a34565b60ca546000905b63ffffffff8116156118ac578260ca61185a600184613878565b63ffffffff16815481106118705761187061355e565b906000526020600020906002020160000154141561189a57611893600182613878565b9392505050565b806118a48161389d565b915050611840565b5060405162461bcd60e51b815260206004820152603760248201527f5061796d656e74436f6f7264696e61746f722e676574526f6f74496e6465784660448201527f726f6d486173683a20726f6f74206e6f7420666f756e64000000000000000000606482015260840161082b565b611923611cb5565b6001600160a01b038216600081815260d1602052604080822054905160ff9091169284151592841515927f17b06be02af2803593116eb96121b9c6e8bee1cc1b145e7c31c19c180e86189b9190a4506001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b6119a5611cb5565b6001600160a01b038116611a0a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161082b565b61083d81612861565b60007f0000000000000000000000000000000000000000000000000000000000000000461415611a44575060c95490565b611a4c6128b3565b905090565b6000600161098f60208401846130e7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad99190613424565b6001600160a01b0316336001600160a01b031614611b095760405162461bcd60e51b815260040161082b90613441565b606654198119606654191614611b875760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161082b565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610974565b6001600160a01b038116611c4c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161082b565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146114375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161082b565b60cb546040516001600160a01b038084169216907f07d2890b3eb1206e7c3cb6bf8d46da31385ace3ce99abf85e5b690c83aa4967890600090a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611d7782806137ef565b905011611dcf5760405162461bcd60e51b815260206004820152603260248201526000805160206139d7833981519152604482015271081b9bc81cdd1c985d1959da595cc81cd95d60721b606482015260840161082b565b6000816040013511611e2d5760405162461bcd60e51b815260206004820152603360248201526000805160206139d7833981519152604482015272020616d6f756e742063616e6e6f74206265203606c1b606482015260840161082b565b6f4b3b4ca85a86c47a098a223fffffffff81604001351115611e995760405162461bcd60e51b815260206004820152603160248201526000805160206139d783398151915260448201527020616d6f756e7420746f6f206c6172676560781b606482015260840161082b565b63ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ed060a083016080840161329e565b63ffffffff161115611f475760405162461bcd60e51b815260206004820152604660248201526000805160206139d783398151915260448201527f206475726174696f6e2065786365656473204d41585f5041594d454e545f44556064820152652920aa24a7a760d11b608482015260a40161082b565b7f0000000000000000000000000000000000000000000000000000000000000000611f7860a083016080840161329e565b611f8291906138d3565b63ffffffff161561200f5760405162461bcd60e51b815260206004820152605c60248201526000805160206139d783398151915260448201527f206475726174696f6e206d7573742062652061206d756c7469706c65206f662060648201527f43414c43554c4154494f4e5f494e54455256414c5f5345434f4e445300000000608482015260a40161082b565b7f0000000000000000000000000000000000000000000000000000000000000000612040608083016060840161329e565b61204a91906138d3565b63ffffffff16156120e25760405162461bcd60e51b815260206004820152606260248201526000805160206139d783398151915260448201527f20737461727454696d657374616d70206d7573742062652061206d756c74697060648201527f6c65206f662043414c43554c4154494f4e5f494e54455256414c5f5345434f4e608482015261445360f01b60a482015260c40161082b565b6120f2608082016060830161329e565b63ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff164261212a9190613839565b111580156121735750612143608082016060830161329e565b63ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b6121df5760405162461bcd60e51b815260206004820152604360248201526000805160206139d783398151915260448201527f20737461727454696d657374616d7020746f6f2066617220696e207468652070606482015262185cdd60ea1b608482015260a40161082b565b61220f63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613758565b61221f608083016060840161329e565b63ffffffff1611156122955760405162461bcd60e51b815260206004820152604560248201526000805160206139d783398151915260448201527f20737461727454696d657374616d7020746f6f2066617220696e207468652066606482015264757475726560d81b608482015260a40161082b565b6000805b6122a383806137ef565b90508110156124a15760006122b884806137ef565b838181106122c8576122c861355e565b6122de92602060409092020190810191506130e7565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa158015612349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236d919061348b565b8061239457506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b6123f45760405162461bcd60e51b815260206004820152603c60248201526000805160206139d783398151915260448201527f20696e76616c696420737472617465677920636f6e7369646572656400000000606482015260840161082b565b806001600160a01b0316836001600160a01b03161061248f5760405162461bcd60e51b815260206004820152605b60248201526000805160206139d783398151915260448201527f2073747261746567696573206d75737420626520696e20617363656e64696e6760648201527f206f7264657220746f2068616e646c65206475706c6963617465730000000000608482015260a40161082b565b915061249a81613783565b9050612299565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526125119085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a9f565b50505050565b806040015163ffffffff164210156125905760405162461bcd60e51b815260206004820152603660248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a206044820152751c9bdbdd081b9bdd081858dd1a5d985d1959081e595d60521b606482015260840161082b565b61259d60c083018361379e565b90506125ac60a084018461379e565b9050146126365760405162461bcd60e51b815260206004820152604c60248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a2060448201527f746f6b656e496e646963657320616e6420746f6b656e50726f6f6673206c656e60648201526b0cee8d040dad2e6dac2e8c6d60a31b608482015260a40161082b565b61264360e08301836137ef565b905061265260c084018461379e565b9050146126da5760405162461bcd60e51b815260206004820152604a60248201527f5061796d656e74436f6f7264696e61746f722e5f636865636b436c61696d3a2060448201527f746f6b656e5472656550726f6f667320616e64206c6561766573206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a40161082b565b8051612706906126f0604085016020860161329e565b6126fd60408601866138f6565b86606001612b71565b60005b61271660a084018461379e565b90508110156124a1576127b0608084013561273460a086018661379e565b848181106127445761274461355e565b9050602002016020810190612759919061329e565b61276660c087018761379e565b858181106127765761277661355e565b905060200281019061278891906138f6565b61279560e08901896137ef565b878181106127a5576127a561355e565b905060400201612ce5565b6127b981613783565b9050612709565b6040516001600160a01b0383166024820152604481018290526124a190849063a9059cbb60e01b906064016124da565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6065546001600160a01b031615801561296b57506001600160a01b03821615155b6129ed5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161082b565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2612a3082611bbe565b5050565b60cb546040805161ffff600160e01b9093048316815291831660208301527f8cdc428b0431b82d1619763f443a48197db344ba96905f3949643acd1c863a06910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b6000612af4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e369092919063ffffffff16565b8051909150156124a15780806020019051810190612b12919061348b565b6124a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161082b565b612b7c60208361393d565b6001901b8463ffffffff1610612c065760405162461bcd60e51b815260206004820152604360248201527f5061796d656e74436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e65724c656166496e6064820152620c8caf60eb1b608482015260a40161082b565b6000612c118261097f565b9050612c5c84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92508591505063ffffffff8916612e4d565b612cdd5760405162461bcd60e51b815260206004820152604660248201527f5061796d656e74436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e657220636c61696d60648201526510383937b7b360d11b608482015260a40161082b565b505050505050565b612cf060208361393d565b6001901b8463ffffffff1610612d6e5760405162461bcd60e51b815260206004820152603c60248201527f5061796d656e74436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e4c656166496e64657800000000606482015260840161082b565b6000612d7982611a51565b9050612dc484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92508591505063ffffffff8916612e4d565b612cdd5760405162461bcd60e51b815260206004820152603f60248201527f5061796d656e74436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e20636c61696d2070726f6f6600606482015260840161082b565b6060612e458484600085612e65565b949350505050565b600083612e5b868585612f96565b1495945050505050565b606082471015612ec65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161082b565b6001600160a01b0385163b612f1d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161082b565b600080866001600160a01b03168587604051612f39919061397d565b60006040518083038185875af1925050503d8060008114612f76576040519150601f19603f3d011682016040523d82523d6000602084013e612f7b565b606091505b5091509150612f8b828286613099565b979650505050505050565b600060208451612fa6919061398f565b1561302d5760405162461bcd60e51b815260206004820152604b60248201527f4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f664b65636360448201527f616b3a2070726f6f66206c656e6774682073686f756c642062652061206d756c60648201526a3a34b836329037b310199960a91b608482015260a40161082b565b8260205b855181116130905761304460028561398f565b6130655781600052808601516020526040600020915060028404935061307e565b8086015160005281602052604060002091506002840493505b613089602082613758565b9050613031565b50949350505050565b606083156130a8575081611893565b8251156130b85782518084602001fd5b8160405162461bcd60e51b815260040161082b91906139a3565b6001600160a01b038116811461083d57600080fd5b6000602082840312156130f957600080fd5b8135611893816130d2565b60006020828403121561311657600080fd5b5035919050565b60006040828403121561312f57600080fd5b50919050565b60006040828403121561314757600080fd5b611893838361311d565b6000806020838503121561316457600080fd5b823567ffffffffffffffff8082111561317c57600080fd5b818501915085601f83011261319057600080fd5b81358181111561319f57600080fd5b8660208260051b85010111156131b457600080fd5b60209290920196919550909350505050565b600080604083850312156131d957600080fd5b82356131e4816130d2565b915060208301356131f4816130d2565b809150509250929050565b6000610100828403121561312f57600080fd5b6000806040838503121561322557600080fd5b823567ffffffffffffffff81111561323c57600080fd5b613248858286016131ff565b92505060208301356131f4816130d2565b803563ffffffff8116811461326d57600080fd5b919050565b6000806040838503121561328557600080fd5b8235915061329560208401613259565b90509250929050565b6000602082840312156132b057600080fd5b61189382613259565b6000602082840312156132cb57600080fd5b813560ff8116811461189357600080fd5b6000602082840312156132ee57600080fd5b813567ffffffffffffffff81111561330557600080fd5b612e45848285016131ff565b6000806040838503121561332457600080fd5b823561332f816130d2565b946020939093013593505050565b803561326d816130d2565b803561ffff8116811461326d57600080fd5b60008060008060008060c0878903121561337357600080fd5b863561337e816130d2565b9550602087013561338e816130d2565b94506040870135935060608701356133a5816130d2565b92506133b360808801613259565b91506133c160a08801613348565b90509295509295509295565b6000602082840312156133df57600080fd5b61189382613348565b801515811461083d57600080fd5b6000806040838503121561340957600080fd5b8235613414816130d2565b915060208301356131f4816133e8565b60006020828403121561343657600080fd5b8151611893816130d2565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60006020828403121561349d57600080fd5b8151611893816133e8565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261358a57600080fd5b9190910192915050565b818352600060208085019450826000805b868110156135f95782356135b8816130d2565b6001600160a01b03168852828401356bffffffffffffffffffffffff81168082146135e1578384fd5b898601525060409788019792909201916001016135a5565b50959695505050505050565b60008135601e1983360301811261361b57600080fd5b8201803567ffffffffffffffff81111561363457600080fd5b8060061b360384131561364657600080fd5b60a0855261365b60a086018260208501613594565b91505061366a6020840161333d565b6001600160a01b031660208501526040838101359085015261368e60608401613259565b63ffffffff1660608501526136a560808401613259565b63ffffffff81166080860152509392505050565b60018060a01b03841681528260208201526060604082015260006136e06060830184613605565b95945050505050565b60208082526045908201526000805160206139d783398151915260408201527f2072616e6765207061796d656e74206861736820616c7265616479207375626d6060820152641a5d1d195960da1b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561376b5761376b613742565b500190565b6020815260006118936020830184613605565b600060001982141561379757613797613742565b5060010190565b6000808335601e198436030181126137b557600080fd5b83018035915067ffffffffffffffff8211156137d057600080fd5b6020019150600581901b36038213156137e857600080fd5b9250929050565b6000808335601e1984360301811261380657600080fd5b83018035915067ffffffffffffffff82111561382157600080fd5b6020019150600681901b36038213156137e857600080fd5b60008282101561384b5761384b613742565b500390565b600063ffffffff80831681851680830382111561386f5761386f613742565b01949350505050565b600063ffffffff8381169083168181101561389557613895613742565b039392505050565b600063ffffffff8216806138b3576138b3613742565b6000190192915050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff808416806138ea576138ea6138bd565b92169190910692915050565b6000808335601e1984360301811261390d57600080fd5b83018035915067ffffffffffffffff82111561392857600080fd5b6020019150368190038213156137e857600080fd5b60008261394c5761394c6138bd565b500490565b60005b8381101561396c578181015183820152602001613954565b838111156125115750506000910152565b6000825161358a818460208701613951565b60008261399e5761399e6138bd565b500690565b60208152600082518060208401526139c2816040850160208701613951565b601f01601f1916919091016040019291505056fe5061796d656e74436f6f7264696e61746f722e5f706179466f7252616e67653aa2646970667358221220230c33f5c3e5597aea966c344062b55bba8c024d05ba89d85105a679402443f564736f6c634300080c0033",
		"sourceMap": "1065:23433:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:41:105;;;;;;;;287:10:229;275:23;;;257:42;;245:2;230:18;1498:41:105;;;;;;;;3197:42;;;;;-1:-1:-1;;;3197:42:105;;;;;;;;;484:6:229;472:19;;;454:38;;442:2;427:18;3197:42:105;310:188:229;5826:138:134;;;;;;:::i;:::-;;:::i;:::-;;3832:392;;;;;;:::i;:::-;;:::i;4191:57:105:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1569:14:229;;1562:22;1544:41;;1532:2;1517:18;4191:57:105;1404:187:229;21890:203:104;;;;;;:::i;:::-;;:::i;:::-;;;2185:25:229;;;2173:2;2158:18;21890:203:104;2039:177:229;13288:123:104;;;;;;:::i;:::-;;:::i;5566:1002::-;;;;;;:::i;:::-;;:::i;22876:146::-;;;;;;:::i;:::-;-1:-1:-1;;22987:28:104;;-1:-1:-1;;;22987:28:104;;;;;22876:146;3359:45:105;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3359:45:105;;;;;;-1:-1:-1;;;;;3465:32:229;;;3447:51;;3435:2;3420:18;3359:45:105;3301:203:229;1622:49:105;;;;;1362:46;;;;;2023:49;;;;;2965:29;;;;;-1:-1:-1;;;2965:29:105;;;;;;8856:1520:104;;;;;;:::i;:::-;;:::i;10706:1108::-;;;;;;:::i;:::-;;:::i;12552:126::-;;;;;;:::i;:::-;;:::i;4299:136:134:-;;;:::i;2683:43:105:-;;;;;;:::i;:::-;;:::i;:::-;;;;5390:25:229;;;5434:10;5480:15;;;5475:2;5460:18;;5453:43;5532:15;;5512:18;;;5505:43;5378:2;5363:18;2683:43:105;5192:362:229;5606:149:134;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;5418:87;5491:7;;5418:87;;22498:174:104;;;;;;:::i;:::-;;:::i;2841:29:105:-;;;;;-1:-1:-1;;;;;2841:29:105;;;3062:48;;;;;-1:-1:-1;;;3062:48:105;;;;;;2071:101:39;;;:::i;4003:76:105:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;23028:116:104;23113:17;:24;23028:116;;3476:71:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1825:37:134;;;;;-1:-1:-1;;;;;1825:37:134;;;1441:85:39;1513:6;;-1:-1:-1;;;;;1513:6:39;1441:85;;2559:104:104;;2620:42;2559:104;;1084:52:105;;;;;12091:239:104;;;;;;:::i;:::-;;:::i;6907:1067::-;;;;;;:::i;:::-;;:::i;3806:70:105:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4012:583:104;;;;;;:::i;:::-;;:::i;3646:47:105:-;;;;;;:::i;:::-;;;;;;;;;;;;;;12909:154:104;;;;;;:::i;:::-;;:::i;23227:346::-;;;;;;:::i;:::-;;:::i;1903:53:105:-;;;;;13720:296:104;;;;;;:::i;:::-;;:::i;1230:44:105:-;;;;;2321:198:39;;;;;;:::i;:::-;;:::i;23968:227:104:-;;;:::i;22159:202::-;;;;;;:::i;:::-;;:::i;4911:437:134:-;;;;;;:::i;:::-;;:::i;5826:138::-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:134;-1:-1:-1;;;;;2285:23:134;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:134;:10;-1:-1:-1;;;;;2271:39:134;;2263:94;;;;-1:-1:-1;;;2263:94:134;;;;;;;:::i;:::-;;;;;;;;;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;3832:392::-;2125:14;;:35;;-1:-1:-1;;;2125:35:134;;2149:10;2125:35;;;3447:51:229;-1:-1:-1;;;;;2125:14:134;;;;:23;;3420:18:229;;2125:35:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:134;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:134;;11743:2:229;4025:107:134::1;::::0;::::1;11725:21:229::0;11782:2;11762:18;;;11755:30;11821:34;11801:18;;;11794:62;11892:26;11872:18;;;11865:54;11936:19;;4025:107:134::1;11541:420:229::0;4025:107:134::1;4142:7;:25:::0;;;4182:35:::1;::::0;2185:25:229;;;4189:10:134::1;::::0;4182:35:::1;::::0;2173:2:229;2158:18;4182:35:134::1;;;;;;;;3832:392:::0;:::o;21890:203:104:-;21980:7;;22051:11;;;;:4;:11;:::i;:::-;22064:4;:20;;;22016:69;;;;;;;;;12185:3:229;12163:16;;;;-1:-1:-1;;;;;;12159:36:229;12147:49;;12233:2;12229:15;;;;-1:-1:-1;;12225:53:229;12221:1;12212:11;;12205:74;12304:2;12295:12;;12288:28;12341:2;12332:12;;11966:384;22016:69:104;;;;;;;;;;;;;22006:80;;;;;;21999:87;;21890:203;;;:::o;13288:123::-;1334:13:39;:11;:13::i;:::-;13369:35:104::1;13388:15;13369:18;:35::i;5566:1002::-:0;5724:7:134;;1846:1:104;;5695::134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;1815:1:41::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:41::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;5717:9:104::2;5712:850;5732:24:::0;;::::2;5712:850;;;5777:34;5814:13;;5828:1;5814:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5873:10;5844:13;5860:24:::0;;;:12:::2;:24;::::0;;;;;;;;5935:43;;5777:53;;-1:-1:-1;5860:24:104;5844:13;;5935:43:::2;::::0;5873:10;;5860:24;;5777:53;;5935:43:::2;;:::i;:::-;;::::0;;-1:-1:-1;;5935:43:104;;::::2;::::0;;;;;;5925:54;;5935:43:::2;5925:54:::0;;::::2;::::0;6038:10:::2;6019:30;::::0;;;:18:::2;:30:::0;;;;;:48;;;;;;;;;5925:54;;-1:-1:-1;6019:48:104::2;;6018:49;5993:177;;;;-1:-1:-1::0;;;5993:177:104::2;;;;;;;:::i;:::-;6197:35;6219:12;6197:21;:35::i;:::-;6278:10;6259:30;::::0;;;:18:::2;:30;::::0;;;;;;;:48;;;;;;;;:55;;-1:-1:-1;;6259:55:104::2;6310:4;6259:55:::0;;::::2;::::0;;;6355:9:::2;::::0;:5;;:9:::2;:::i;:::-;6341:10;6328:24;::::0;;;:12:::2;:24;::::0;;;;;;:36;;;;6384:70;;6423:16;;6416:5;;6384:70:::2;::::0;::::2;::::0;6441:12;;6384:70:::2;:::i;:::-;;;;;;;;6468:83;6504:10;6524:4;6531:19;::::0;::::2;::::0;::::2;::::0;6468:18:::2;::::0;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;6468:35:104::2;::::0;:83;;:35:::2;:83::i;:::-;5763:799;;;5758:3;;;;;:::i;:::-;;;;5712:850;;;-1:-1:-1::0;;1772:1:41::1;2872:7;:22:::0;-1:-1:-1;;5566:1002:104:o;8856:1520::-;5724:7:134;;2063:1:104;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;1815:1:41::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:41::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;9027:28:104::2;9058:17;9076:15;;::::0;::::2;:5:::0;:15:::2;:::i;:::-;9058:34;;;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;9027:65:::2;::::0;;::::2;::::0;::::2;::::0;;9058:34:::2;::::0;;::::2;::::0;;::::2;9027:65:::0;;;;::::2;;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;9102:24:104::2;9114:5:::0;9027:65;9102:11:::2;:24::i;:::-;9237:14;9254:23;::::0;;;:16:::2;::::0;::::2;:23;:::i;:::-;-1:-1:-1::0;;;;;9305:18:104;;::::2;9287:15;9305:18:::0;;;:10:::2;:18;::::0;;;;;9237:40;;-1:-1:-1;9305:18:104::2;9337:21:::0;9333:68:::2;;-1:-1:-1::0;9384:6:104;9333:68:::2;9418:10;-1:-1:-1::0;;;;;9418:21:104;::::2;;9410:94;;;::::0;-1:-1:-1;;;9410:94:104;;17608:2:229;9410:94:104::2;::::0;::::2;17590:21:229::0;17647:2;17627:18;;;17620:30;17686:34;17666:18;;;17659:62;17757:30;17737:18;;;17730:58;17805:19;;9410:94:104::2;17406:424:229::0;9410:94:104::2;9519:9;9514:856;9538:18;;::::0;::::2;:5:::0;:18:::2;:::i;:::-;:25;;9534:1;:29;9514:856;;;9584:38;9625:17;;::::0;::::2;:5:::0;:17:::2;:::i;:::-;9643:1;9625:20;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9692:25:104;::::2;9660:29;9692:25:::0;;;:17:::2;:25;::::0;;;9625:20:::2;9692:25:::0;;;9625:20;::::2;::::0;;;::::2;::::0;-1:-1:-1;9660:29:104;9692:25;;-1:-1:-1;9660:29:104;;9718:15:::2;::::0;;::::2;9625:20:::0;9718:15:::2;:::i;:::-;-1:-1:-1::0;;;;;9692:42:104::2;-1:-1:-1::0;;;;;9692:42:104::2;;;;;;;;;;;;;9660:74;;9804:21;9773:9;:28;;;:52;9748:196;;;::::0;-1:-1:-1;;;9748:196:104;;19176:2:229;9748:196:104::2;::::0;::::2;19158:21:229::0;19215:2;19195:18;;;19188:30;19254:34;19234:18;;;19227:62;19325:34;19305:18;;;19298:62;-1:-1:-1;;;19376:19:229;;;19369:52;19438:19;;9748:196:104::2;18974:489:229::0;9748:196:104::2;10029:19;10051:52;10082:21:::0;10051:28:::2;::::0;::::2;;:52;:::i;:::-;-1:-1:-1::0;;;;;10117:25:104;::::2;;::::0;;;:17:::2;10162:28;10117:25:::0;;;;;;10029:74;;-1:-1:-1;10162:28:104;::::2;::::0;::::2;::::0;10117:25;;10143:15:::2;::::0;10162:9;10143:15:::2;:::i;:::-;-1:-1:-1::0;;;;;10117:42:104::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;-1:-1:-1;10117:42:104;:73;;;;10205:52:::2;::::0;10234:9;;10245:11;;10205:15:::2;::::0;;::::2;:9:::0;:15:::2;:::i;:::-;-1:-1:-1::0;;;;;10205:28:104::2;::::0;:52;:28:::2;:52::i;:::-;10291:9:::0;;-1:-1:-1;;;;;10276:83:104;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;10330:15:::2;;::::0;::::2;:9:::0;:15:::2;:::i;:::-;10276:83;::::0;;19816:25:229;;;-1:-1:-1;;;;;19877:32:229;;;19872:2;19857:18;;19850:60;19926:18;;19919:34;;;19804:2;19789:18;10276:83:104::2;;;;;;;9570:800;;;9565:3;;;;;:::i;:::-;;;;9514:856;;;-1:-1:-1::0;;1772:1:41::1;2872:7;:22:::0;-1:-1:-1;;;;;8856:1520:104:o;10706:1108::-;5724:7:134;;2168:1:104;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;2732:14:104::1;::::0;-1:-1:-1;;;;;2732:14:104::1;2718:10;:28;2710:93;;;::::0;-1:-1:-1;;;2710:93:104;;20166:2:229;2710:93:104::1;::::0;::::1;20148:21:229::0;20205:2;20185:18;;;20178:30;20244:34;20224:18;;;20217:62;-1:-1:-1;;;20295:18:229;;;20288:50;20355:19;;2710:93:104::1;19964:416:229::0;2710:93:104::1;10932:34:::2;::::0;::::2;-1:-1:-1::0;;;10932:34:104;;::::2;::::0;::::2;10899:67:::0;;::::2;;10878:189;;;::::0;-1:-1:-1;;;10878:189:104;;20587:2:229;10878:189:104::2;::::0;::::2;20569:21:229::0;20626:2;20606:18;;;20599:30;20665:34;20645:18;;;20638:62;20736:34;20716:18;;;20709:62;-1:-1:-1;;;20787:19:229;;;20780:42;20839:19;;10878:189:104::2;20385:479:229::0;10878:189:104::2;11131:15;11098:30;:48;;;11077:180;;;::::0;-1:-1:-1;;;11077:180:104;;21071:2:229;11077:180:104::2;::::0;::::2;21053:21:229::0;21110:2;21090:18;;;21083:30;21149:34;21129:18;;;21122:62;21220:34;21200:18;;;21193:62;-1:-1:-1;;;21271:19:229;;;21264:52;21333:19;;11077:180:104::2;20869:489:229::0;11077:180:104::2;11293:17;:24:::0;11375:15:::2;::::0;11267:16:::2;::::0;11349:41:::2;::::0;-1:-1:-1;;;11375:15:104;::::2;;;11356;11349:41;:::i;:::-;11436:182;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;;::::0;;::::2;::::0;;;;;::::2;::::0;;;;;;11400:17:::2;:228:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;11400:228:104;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;-1:-1:-1::0;;11400:228:104;;;;;;;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;11638:34:::2;:67:::0;;-1:-1:-1;;;;11638:67:104::2;-1:-1:-1::0;;;11638:67:104;::::2;;::::0;;11720:87;;257:42:229;;;11436:182:104;;-1:-1:-1;11436:182:104;;11720:87;;::::2;::::0;::::2;::::0;230:18:229;11720:87:104::2;;;;;;;10868:946;;10706:1108:::0;;;:::o;12552:126::-;1334:13:39;:11;:13::i;:::-;12634:37:104::1;12654:16;12634:19;:37::i;4299:136:134:-:0;2125:14;;:35;;-1:-1:-1;;;2125:35:134;;2149:10;2125:35;;;3447:51:229;-1:-1:-1;;;;;2125:14:134;;;;:23;;3420:18:229;;2125:35:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:134;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:134::1;:27:::0;;;4391:37:::1;::::0;2185:25:229;;;4398:10:134::1;::::0;4391:37:::1;::::0;2173:2:229;2158:18;4391:37:134::1;;;;;;;4299:136::o:0;2683:43:105:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2683:43:105;;;;;;;;;;:::o;22498:174:104:-;22574:4;22590:54;22602:5;22609:17;22627:15;;;;22602:5;22627:15;:::i;:::-;22609:34;;;;;;;;;;:::i;:::-;;;;;;;;;;22590:54;;;;;;;;22609:34;;;;;;;22590:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;:54::i;:::-;-1:-1:-1;22661:4:104;;22498:174;-1:-1:-1;22498:174:104:o;2071:101:39:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;12091:239:104:-;12167:10;12150:14;12209:18;;;:10;:18;;;;;;;;-1:-1:-1;;;;;;12237:28:104;;-1:-1:-1;;;;;12237:28:104;;;;;;;;;12280:43;;12209:18;;;;;12167:10;;12280:43;;;12140:190;;12091:239;:::o;6907:1067::-;5724:7:134;;1968:1:104;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;2923:10:104::1;2897:37;::::0;;;:25:::1;:37;::::0;;;;;::::1;;2876:150;;;::::0;-1:-1:-1;;;2876:150:104;;21798:2:229;2876:150:104::1;::::0;::::1;21780:21:229::0;21837:2;21817:18;;;21810:30;21876:34;21856:18;;;21849:62;21947:34;21927:18;;;21920:62;-1:-1:-1;;;21998:19:229;;;21991:33;22041:19;;2876:150:104::1;21596:470:229::0;2876:150:104::1;1815:1:41::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:41::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;7093:9:104::3;7088:880;7108:24:::0;;::::3;7088:880;;;7153:34;7190:13;;7204:1;7190:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7249:10;7220:13;7236:24:::0;;;:12:::3;:24;::::0;;;;;;;;7317:43;;7153:53;;-1:-1:-1;7236:24:104;7220:13;;7317:43:::3;::::0;7249:10;;7236:24;;7153:53;;7317:43:::3;;:::i;:::-;;::::0;;-1:-1:-1;;7317:43:104;;::::3;::::0;;;;;;7307:54;;7317:43:::3;7307:54:::0;;::::3;::::0;7426:10:::3;7401:36;::::0;;;:24:::3;:36:::0;;;;;:60;;;;;;;;;7307:54;;-1:-1:-1;7401:60:104::3;;7400:61;7375:189;;;;-1:-1:-1::0;;;7375:189:104::3;;;;;;;:::i;:::-;7591:35;7613:12;7591:21;:35::i;:::-;7666:10;7641:36;::::0;;;:24:::3;:36;::::0;;;;;;;:60;;;;;;;;:67;;-1:-1:-1;;7641:67:104::3;7704:4;7641:67:::0;;::::3;::::0;;;7749:9:::3;::::0;:5;;:9:::3;:::i;:::-;7735:10;7722:24;::::0;;;:12:::3;:24;::::0;;;;;;:36;;;;7778:82;;7823:22;;7816:5;;7778:82:::3;::::0;::::3;::::0;7847:12;;7778:82:::3;:::i;:::-;;;;;;;;7874:83;7910:10;7930:4;7937:19;::::0;::::3;::::0;::::3;::::0;7874:18:::3;::::0;::::3;::::0;::::3;;:::i;:83::-;7139:829;;;7134:3;;;;;:::i;:::-;;;;7088:880;;4012:583:::0;3111:19:40;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:40;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:40;1476:19:42;:23;;;3219:66:40;;-1:-1:-1;3268:12:40;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:40;;22273:2:229;3157:201:40;;;22255:21:229;22312:2;22292:18;;;22285:30;22351:34;22331:18;;;22324:62;-1:-1:-1;;;22402:18:229;;;22395:44;22456:19;;3157:201:40;22071:410:229;3157:201:40;3368:12;:16;;-1:-1:-1;;3368:16:40;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:40;;;;;3394:65;4301:27:104::1;:25;:27::i;:::-;4281:17;:47:::0;4338:55:::1;4356:15:::0;4373:19;4338:17:::1;:55::i;:::-;4403:32;4422:12;4403:18;:32::i;:::-;4445:35;4464:15;4445:18;:35::i;:::-;4490:37;4510:16;4490:19;:37::i;:::-;4537:51;4566:21;4537:28;:51::i;:::-;3483:14:40::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:40;;;3553:14;;-1:-1:-1;22638:36:229;;3553:14:40;;22626:2:229;22611:18;3553:14:40;;;;;;;3479:99;3101:483;4012:583:104;;;;;;:::o;12909:154::-;1334:13:39;:11;:13::i;:::-;13005:51:104::1;13034:21;13005:28;:51::i;23227:346::-:0;23337:17;:24;23296:6;;23314:178;23364:5;;;;23314:178;;23427:8;23394:17;23412:5;23416:1;23412;:5;:::i;:::-;23394:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:41;23390:92;;;23462:5;23466:1;23462;:5;:::i;:::-;23455:12;23227:346;-1:-1:-1;;;23227:346:104:o;23390:92::-;23371:3;;;;:::i;:::-;;;;23314:178;;;-1:-1:-1;23501:65:104;;-1:-1:-1;;;23501:65:104;;23303:2:229;23501:65:104;;;23285:21:229;23342:2;23322:18;;;23315:30;23381:34;23361:18;;;23354:62;23452:25;23432:18;;;23425:53;23495:19;;23501:65:104;23101:419:229;13720:296:104;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;13838:37:104;::::1;13821:14;13838:37:::0;;;:25:::1;:37;::::0;;;;;;13890:60;;13838:37:::1;::::0;;::::1;::::0;13890:60;::::1;;::::0;;::::1;;::::0;::::1;::::0;13821:14;13890:60:::1;-1:-1:-1::0;;;;;;13960:37:104;;;::::1;;::::0;;;:25:::1;:37;::::0;;;;:49;;-1:-1:-1;;13960:49:104::1;::::0;::::1;;::::0;;;::::1;::::0;;13720:296::o;2321:198:39:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:39;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:39;;23727:2:229;2401:73:39::1;::::0;::::1;23709:21:229::0;23766:2;23746:18;;;23739:30;23805:34;23785:18;;;23778:62;-1:-1:-1;;;23856:18:229;;;23849:36;23902:19;;2401:73:39::1;23525:402:229::0;2401:73:39::1;2484:28;2503:8;2484:18;:28::i;23968:227:104:-:0;24016:7;24056:17;24039:13;:34;24035:154;;;-1:-1:-1;24096:17:104;;;23968:227::o;24035:154::-;24151:27;:25;:27::i;:::-;24144:34;;23968:227;:::o;22159:202::-;22247:7;2490:1;22317:10;;;;:4;:10;:::i;4911:437:134:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:134;-1:-1:-1;;;;;2285:23:134;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:134;:10;-1:-1:-1;;;;;2271:39:134;;2263:94;;;;-1:-1:-1;;;2263:94:134;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:134;;24539:2:229;5104:150:134::1;::::0;::::1;24521:21:229::0;24578:2;24558:18;;;24551:30;24617:34;24597:18;;;24590:62;24688:26;24668:18;;;24661:54;24732:19;;5104:150:134::1;24337:420:229::0;5104:150:134::1;5264:7;:25:::0;;;5304:37:::1;::::0;2185:25:229;;;5313:10:134::1;::::0;5304:37:::1;::::0;2173:2:229;2158:18;5304:37:134::1;2039:177:229::0;6024:360:134;-1:-1:-1;;;;;6127:40:134;;6106:160;;;;-1:-1:-1;;;6106:160:134;;24964:2:229;6106:160:134;;;24946:21:229;25003:2;24983:18;;;24976:30;25042:34;25022:18;;;25015:62;25113:34;25093:18;;;25086:62;-1:-1:-1;;;25164:19:229;;;25157:40;25214:19;;6106:160:134;24762:477:229;6106:160:134;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:134;;;25506:34:229;;25576:15;;;25571:2;25556:18;;25549:43;6281:52:134;;25441:18:229;6281:52:134;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:134;-1:-1:-1;;;;;6343:34:134;;;;;;;;;;6024:360::o;1599:130:39:-;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:43;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;25805:2:229;1654:68:39;;;25787:21:229;;;25824:18;;;25817:30;25883:34;25863:18;;;25856:62;25935:18;;1654:68:39;25603:356:229;21441:176:104;21536:14;;21518:50;;-1:-1:-1;;;;;21518:50:104;;;;21536:14;;21518:50;;21536:14;;21518:50;21578:14;:32;;-1:-1:-1;;;;;;21578:32:104;-1:-1:-1;;;;;21578:32:104;;;;;;;;;;21441:176::o;14348:2254::-;14494:1;14447:37;:12;;:37;:::i;:::-;:44;;:48;14439:111;;;;-1:-1:-1;;;14439:111:104;;26758:2:229;14439:111:104;;;26740:21:229;26797:2;26777:18;;;26770:30;-1:-1:-1;;;;;;;;;;;26816:18:229;;;26809:62;-1:-1:-1;;;26887:18:229;;;26880:48;26945:19;;14439:111:104;26556:414:229;14439:111:104;14590:1;14568:12;:19;;;:23;14560:87;;;;-1:-1:-1;;;14560:87:104;;27177:2:229;14560:87:104;;;27159:21:229;27216:2;27196:18;;;27189:30;-1:-1:-1;;;;;;;;;;;27235:18:229;;;27228:62;-1:-1:-1;;;27306:18:229;;;27299:49;27365:19;;14560:87:104;26975:415:229;14560:87:104;1723:8;14665:12;:19;;;:41;;14657:103;;;;-1:-1:-1;;;14657:103:104;;27597:2:229;14657:103:104;;;27579:21:229;27636:2;27616:18;;;27609:30;-1:-1:-1;;;;;;;;;;;27655:18:229;;;27648:62;-1:-1:-1;;;27726:18:229;;;27719:47;27783:19;;14657:103:104;27395:413:229;14657:103:104;14791:45;14816:20;14791:45;:21;;;;;;;;:::i;:::-;:45;;;;14770:162;;;;-1:-1:-1;;;14770:162:104;;28015:2:229;14770:162:104;;;27997:21:229;28054:2;28034:18;;;28027:30;-1:-1:-1;;;;;;;;;;;28073:18:229;;;28066:62;28164:34;28144:18;;;28137:62;-1:-1:-1;;;28215:19:229;;;28208:37;28262:19;;14770:162:104;27813:474:229;14770:162:104;14987:28;14963:21;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;:57;;;14942:196;;;;-1:-1:-1;;;14942:196:104;;28814:2:229;14942:196:104;;;28796:21:229;28853:2;28833:18;;;28826:30;-1:-1:-1;;;;;;;;;;;28872:18:229;;;28865:62;28963:34;28943:18;;;28936:62;29035:30;29014:19;;;29007:59;29083:19;;14942:196:104;28612:496:229;14942:196:104;15199:28;15169:27;;;;;;;;:::i;:::-;:58;;;;:::i;:::-;:63;;;15148:208;;;;-1:-1:-1;;;15148:208:104;;29315:2:229;15148:208:104;;;29297:21:229;29354:2;29334:18;;;29327:30;-1:-1:-1;;;;;;;;;;;29373:18:229;;;29366:62;29464:34;29444:18;;;29437:62;29536:34;29515:19;;;29508:63;-1:-1:-1;;;29587:19:229;;;29580:33;29630:19;;15148:208:104;29113:542:229;15148:208:104;15431:27;;;;;;;;:::i;:::-;15387:71;;15405:22;15387:40;;:15;:40;;;;:::i;:::-;:71;;:147;;;;-1:-1:-1;15507:27:104;;;;;;;;:::i;:::-;15478:56;;:25;:56;;;;15387:147;15366:261;;;;-1:-1:-1;;;15366:261:104;;29862:2:229;15366:261:104;;;29844:21:229;29901:2;29881:18;;;29874:30;-1:-1:-1;;;;;;;;;;;29920:18:229;;;29913:62;30011:34;29991:18;;;29984:62;-1:-1:-1;;;30062:19:229;;;30055:34;30106:19;;15366:261:104;29660:471:229;15366:261:104;15689:35;;15707:17;15689:35;:15;:35;:::i;:::-;15658:27;;;;;;;;:::i;:::-;:66;;;;15637:182;;;;-1:-1:-1;;;15637:182:104;;30338:2:229;15637:182:104;;;30320:21:229;30377:2;30357:18;;;30350:30;-1:-1:-1;;;;;;;;;;;30396:18:229;;;30389:62;30487:34;30467:18;;;30460:62;-1:-1:-1;;;30538:19:229;;;30531:36;30584:19;;15637:182:104;30136:473:229;15637:182:104;15916:19;15963:9;15958:638;15982:37;:12;;:37;:::i;:::-;:44;;15978:1;:48;15958:638;;;16047:18;16068:37;:12;;:37;:::i;:::-;16106:1;16068:40;;;;;;;:::i;:::-;:49;;;:40;;;;;:49;;;;-1:-1:-1;16068:49:104;:::i;:::-;16156:57;;-1:-1:-1;;;16156:57:104;;-1:-1:-1;;;;;3465:32:229;;;16156:57:104;;;3447:51:229;16047:70:104;;-1:-1:-1;16156:15:104;:47;;;;;;3420:18:229;;16156:57:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:95;;;-1:-1:-1;;;;;;16217:34:104;;2620:42;16217:34;16156:95;16131:214;;;;-1:-1:-1;;;16131:214:104;;31104:2:229;16131:214:104;;;31086:21:229;31143:2;31123:18;;;31116:30;-1:-1:-1;;;;;;;;;;;31162:18:229;;;31155:62;31253:30;31233:18;;;31226:58;31301:19;;16131:214:104;30902:424:229;16131:214:104;16406:8;-1:-1:-1;;;;;16384:31:104;:11;-1:-1:-1;;;;;16384:31:104;;16359:181;;;;-1:-1:-1;;;16359:181:104;;31533:2:229;16359:181:104;;;31515:21:229;31572:2;31552:18;;;31545:30;-1:-1:-1;;;;;;;;;;;31591:18:229;;;31584:62;31682:34;31662:18;;;31655:62;31754:29;31733:19;;;31726:58;31801:19;;16359:181:104;31331:495:229;16359:181:104;16576:8;-1:-1:-1;16028:3:104;;;:::i;:::-;;;15958:638;;;;14429:2173;14348:2254;:::o;974:241:68:-;1139:68;;-1:-1:-1;;;;;32089:15:229;;;1139:68:68;;;32071:34:229;32141:15;;32121:18;;;32114:43;32173:18;;;32166:34;;;1112:96:68;;1132:5;;-1:-1:-1;;;1162:27:68;32006:18:229;;1139:68:68;;;;-1:-1:-1;;1139:68:68;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:68;-1:-1:-1;;;;;;1139:68:68;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;16608:1364:104:-;16745:4;:16;;;16726:35;;:15;:35;;16718:102;;;;-1:-1:-1;;;16718:102:104;;32413:2:229;16718:102:104;;;32395:21:229;32452:2;32432:18;;;32425:30;32491:34;32471:18;;;32464:62;-1:-1:-1;;;32542:18:229;;;32535:52;32604:19;;16718:102:104;32211:418:229;16718:102:104;16880:21;;;;:5;:21;:::i;:::-;:28;-1:-1:-1;16851:18:104;;;;:5;:18;:::i;:::-;:25;;:57;16830:180;;;;-1:-1:-1;;;16830:180:104;;33397:2:229;16830:180:104;;;33379:21:229;33436:2;33416:18;;;33409:30;33475:34;33455:18;;;33448:62;33546:34;33526:18;;;33519:62;-1:-1:-1;;;33597:19:229;;;33590:43;33650:19;;16830:180:104;33195:480:229;16830:180:104;17073:17;;;;:5;:17;:::i;:::-;:24;-1:-1:-1;17041:21:104;;;;:5;:21;:::i;:::-;:28;;:56;17020:177;;;;-1:-1:-1;;;17020:177:104;;33882:2:229;17020:177:104;;;33864:21:229;33921:2;33901:18;;;33894:30;33960:34;33940:18;;;33933:62;34031:34;34011:18;;;34004:62;-1:-1:-1;;;34082:19:229;;;34075:41;34133:19;;17020:177:104;33680:478:229;17020:177:104;17347:9;;17303:202;;17387:17;;;;;;;;:::i;:::-;17431:21;;;;:5;:21;:::i;:::-;17478:5;:16;;17303:23;:202::i;:::-;17627:9;17622:344;17646:18;;;;:5;:18;:::i;:::-;:25;;17642:1;:29;17622:344;;;17692:263;17750:32;;;;17816:18;;;;17750:5;17816:18;:::i;:::-;17835:1;17816:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17867;;;;:5;:21;:::i;:::-;17889:1;17867:24;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;17920:17;;;;:5;:17;:::i;:::-;17938:1;17920:20;;;;;;;:::i;:::-;;;;;;17692:22;:263::i;:::-;17673:3;;;:::i;:::-;;;17622:344;;763:205:68;902:58;;-1:-1:-1;;;;;34881:32:229;;902:58:68;;;34863:51:229;34930:18;;;34923:34;;;875:86:68;;895:5;;-1:-1:-1;;;925:23:68;34836:18:229;;902:58:68;34689:274:229;21010:182:104;21107:15;;21088:53;;;21107:15;-1:-1:-1;;;21107:15:104;;;;;35167:34:229;;35237:15;;;35232:2;35217:18;;35210:43;21088:53:104;;35111:18:229;21088:53:104;;;;;;;21151:15;:34;;;;;;-1:-1:-1;;;21151:34:104;-1:-1:-1;;;;21151:34:104;;;;;;;;;21010:182::o;2673:187:39:-;2765:6;;;-1:-1:-1;;;;;2781:17:39;;;-1:-1:-1;;;;;;2781:17:39;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;24303:193:104:-;24437:19;;;;;;;;;;;-1:-1:-1;;;24437:19:104;;;;;24399:89;;1369:80;24399:89;;;35495:25:229;24427:30:104;35536:18:229;;;35529:34;24459:13:104;35579:18:229;;;35572:34;24482:4:104;35622:18:229;;;;35615:60;;;;24399:89:104;;;;;;;;;;35467:19:229;;;;24399:89:104;;;24389:100;;;;;;24303:193::o;2943:441:134:-;3077:14;;-1:-1:-1;;;;;3077:14:134;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:134;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:134;;35888:2:229;3048:197:134;;;35870:21:229;35927:2;35907:18;;;35900:30;35966:34;35946:18;;;35939:62;36037:34;36017:18;;;36010:62;-1:-1:-1;;;36088:19:229;;;36081:38;36136:19;;3048:197:134;35686:475:229;3048:197:134;3255:7;:26;;;3296:36;;2185:25:229;;;3303:10:134;;3296:36;;2173:2:229;2158:18;3296:36:134;;;;;;;3342:35;3361:15;3342:18;:35::i;:::-;2943:441;;:::o;21198:237:104:-;21314:28;;21290:76;;;21314:28;-1:-1:-1;;;21314:28:104;;;;;36361:34:229;;36431:15;;;36426:2;36411:18;;36404:43;21290:76:104;;36309:18:229;21290:76:104;;;;;;;21376:28;:52;;;;;;-1:-1:-1;;;21376:52:104;-1:-1:-1;;;;21376:52:104;;;;;;;;;21198:237::o;3747:706:68:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:68;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:68;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:68;;36660:2:229;4351:85:68;;;36642:21:229;36699:2;36679:18;;;36672:30;36738:34;36718:18;;;36711:62;-1:-1:-1;;;36789:18:229;;;36782:40;36839:19;;4351:85:68;36458:406:229;20050:954:104;20453:23;20474:2;20453:11;:23;:::i;:::-;20447:1;:30;;20428:15;:50;;;20407:164;;;;-1:-1:-1;;;20407:164:104;;37196:2:229;20407:164:104;;;37178:21:229;37235:2;37215:18;;;37208:30;37274:34;37254:18;;;37247:62;37345:34;37325:18;;;37318:62;-1:-1:-1;;;37396:19:229;;;37389:34;37440:19;;20407:164:104;36994:471:229;20407:164:104;20624:22;20649:35;20673:10;20649:23;:35::i;:::-;20624:60;;20715:186;20837:11;;20715:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20768:4:104;;-1:-1:-1;20872:14:104;;-1:-1:-1;;20715:186:104;;;:28;:186::i;:::-;20694:303;;;;-1:-1:-1;;;20694:303:104;;37672:2:229;20694:303:104;;;37654:21:229;37711:2;37691:18;;;37684:30;37750:34;37730:18;;;37723:62;37821:34;37801:18;;;37794:62;-1:-1:-1;;;37872:19:229;;;37865:37;37919:19;;20694:303:104;37470:474:229;20694:303:104;20243:761;20050:954;;;;;:::o;18434:948::-;18841:22;18861:2;18841:10;:22;:::i;:::-;18835:1;:29;;18817:14;:48;;;18796:155;;;;-1:-1:-1;;;18796:155:104;;38151:2:229;18796:155:104;;;38133:21:229;38190:2;38170:18;;;38163:30;38229:34;38209:18;;;38202:62;38300:30;38280:18;;;38273:58;38348:19;;18796:155:104;37949:424:229;18796:155:104;19004:21;19028:33;19051:9;19028:22;:33::i;:::-;19004:57;;19092:194;19224:10;;19092:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19145:15:104;;-1:-1:-1;19258:13:104;;-1:-1:-1;;19092:194:104;;;:28;:194::i;:::-;19071:304;;;;-1:-1:-1;;;19071:304:104;;38580:2:229;19071:304:104;;;38562:21:229;38619:2;38599:18;;;38592:30;38658:34;38638:18;;;38631:62;38729:33;38709:18;;;38702:61;38780:19;;19071:304:104;38378:427:229;3861:223:69;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:69:o;1240:240:132:-;1395:4;1469;1418:47;1446:5;1453:4;1459:5;1418:27;:47::i;:::-;:55;;1240:240;-1:-1:-1;;;;;1240:240:132:o;4948:499:69:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:69;;39012:2:229;5137:81:69;;;38994:21:229;39051:2;39031:18;;;39024:30;39090:34;39070:18;;;39063:62;-1:-1:-1;;;39141:18:229;;;39134:36;39187:19;;5137:81:69;38810:402:229;5137:81:69;-1:-1:-1;;;;;1476:19:42;;;5228:60:69;;;;-1:-1:-1;;;5228:60:69;;39419:2:229;5228:60:69;;;39401:21:229;39458:2;39438:18;;;39431:30;39497:31;39477:18;;;39470:59;39546:18;;5228:60:69;39217:353:229;5228:60:69;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:69;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:69:o;1997:1172:132:-;2136:7;2191:2;2176:5;:12;:17;;;;:::i;:::-;:22;2155:144;;;;-1:-1:-1;;;2155:144:132;;40436:2:229;2155:144:132;;;40418:21:229;40475:2;40455:18;;;40448:30;40514:34;40494:18;;;40487:62;40585:34;40565:18;;;40558:62;-1:-1:-1;;;40636:19:229;;;40629:42;40688:19;;2155:144:132;40234:479:229;2155:144:132;2332:4;2363:2;2346:788;2372:5;:12;2367:1;:17;2346:788;;2413:9;2421:1;2413:5;:9;:::i;:::-;2409:715;;2572:12;2566:4;2559:26;2636:1;2629:5;2625:13;2619:20;2613:4;2606:34;2693:4;2687;2677:21;2661:37;;2739:1;2732:5;2728:13;2719:22;;2409:715;;;2940:1;2933:5;2929:13;2923:20;2917:4;2910:34;2978:12;2972:4;2965:26;3044:4;3038;3028:21;3012:37;;3090:1;3083:5;3079:13;3070:22;;2409:715;2386:7;2391:2;2386:7;;:::i;:::-;;;2346:788;;;-1:-1:-1;3150:12:132;1997:1172;-1:-1:-1;;;;1997:1172:132:o;7561:742:69:-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:69;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:69;;;;;;;;:::i;503:148:229:-;-1:-1:-1;;;;;595:31:229;;585:42;;575:70;;641:1;638;631:12;656:289;740:6;793:2;781:9;772:7;768:23;764:32;761:52;;;809:1;806;799:12;761:52;848:9;835:23;867:48;909:5;867:48;:::i;950:180::-;1009:6;1062:2;1050:9;1041:7;1037:23;1033:32;1030:52;;;1078:1;1075;1068:12;1030:52;-1:-1:-1;1101:23:229;;950:180;-1:-1:-1;950:180:229:o;1596:168::-;1669:5;1714:2;1705:6;1700:3;1696:16;1692:25;1689:45;;;1730:1;1727;1720:12;1689:45;-1:-1:-1;1752:6:229;1596:168;-1:-1:-1;1596:168:229:o;1769:265::-;1869:6;1922:2;1910:9;1901:7;1897:23;1893:32;1890:52;;;1938:1;1935;1928:12;1890:52;1961:67;2020:7;2009:9;1961:67;:::i;2221:648::-;2340:6;2348;2401:2;2389:9;2380:7;2376:23;2372:32;2369:52;;;2417:1;2414;2407:12;2369:52;2457:9;2444:23;2486:18;2527:2;2519:6;2516:14;2513:34;;;2543:1;2540;2533:12;2513:34;2581:6;2570:9;2566:22;2556:32;;2626:7;2619:4;2615:2;2611:13;2607:27;2597:55;;2648:1;2645;2638:12;2597:55;2688:2;2675:16;2714:2;2706:6;2703:14;2700:34;;;2730:1;2727;2720:12;2700:34;2783:7;2778:2;2768:6;2765:1;2761:14;2757:2;2753:23;2749:32;2746:45;2743:65;;;2804:1;2801;2794:12;2743:65;2835:2;2827:11;;;;;2857:6;;-1:-1:-1;2221:648:229;;-1:-1:-1;;;;2221:648:229:o;2874:422::-;2942:6;2950;3003:2;2991:9;2982:7;2978:23;2974:32;2971:52;;;3019:1;3016;3009:12;2971:52;3058:9;3045:23;3077:48;3119:5;3077:48;:::i;:::-;3144:5;-1:-1:-1;3201:2:229;3186:18;;3173:32;3214:50;3173:32;3214:50;:::i;:::-;3283:7;3273:17;;;2874:422;;;;;:::o;3870:167::-;3941:5;3986:3;3977:6;3972:3;3968:16;3964:26;3961:46;;;4003:1;4000;3993:12;4042:531;4149:6;4157;4210:2;4198:9;4189:7;4185:23;4181:32;4178:52;;;4226:1;4223;4216:12;4178:52;4266:9;4253:23;4299:18;4291:6;4288:30;4285:50;;;4331:1;4328;4321:12;4285:50;4354:78;4424:7;4415:6;4404:9;4400:22;4354:78;:::i;:::-;4344:88;;;4482:2;4471:9;4467:18;4454:32;4495:48;4537:5;4495:48;:::i;4578:163::-;4645:20;;4705:10;4694:22;;4684:33;;4674:61;;4731:1;4728;4721:12;4674:61;4578:163;;;:::o;4746:252::-;4813:6;4821;4874:2;4862:9;4853:7;4849:23;4845:32;4842:52;;;4890:1;4887;4880:12;4842:52;4926:9;4913:23;4903:33;;4955:37;4988:2;4977:9;4973:18;4955:37;:::i;:::-;4945:47;;4746:252;;;;;:::o;5003:184::-;5061:6;5114:2;5102:9;5093:7;5089:23;5085:32;5082:52;;;5130:1;5127;5120:12;5082:52;5153:28;5171:9;5153:28;:::i;5559:269::-;5616:6;5669:2;5657:9;5648:7;5644:23;5640:32;5637:52;;;5685:1;5682;5675:12;5637:52;5724:9;5711:23;5774:4;5767:5;5763:16;5756:5;5753:27;5743:55;;5794:1;5791;5784:12;6015:379;6113:6;6166:2;6154:9;6145:7;6141:23;6137:32;6134:52;;;6182:1;6179;6172:12;6134:52;6222:9;6209:23;6255:18;6247:6;6244:30;6241:50;;;6287:1;6284;6277:12;6241:50;6310:78;6380:7;6371:6;6360:9;6356:22;6310:78;:::i;6399:332::-;6467:6;6475;6528:2;6516:9;6507:7;6503:23;6499:32;6496:52;;;6544:1;6541;6534:12;6496:52;6583:9;6570:23;6602:48;6644:5;6602:48;:::i;:::-;6669:5;6721:2;6706:18;;;;6693:32;;-1:-1:-1;;;6399:332:229:o;6736:159::-;6812:20;;6841:48;6812:20;6841:48;:::i;7803:159::-;7870:20;;7930:6;7919:18;;7909:29;;7899:57;;7952:1;7949;7942:12;7967:820;8094:6;8102;8110;8118;8126;8134;8187:3;8175:9;8166:7;8162:23;8158:33;8155:53;;;8204:1;8201;8194:12;8155:53;8243:9;8230:23;8262:48;8304:5;8262:48;:::i;:::-;8329:5;-1:-1:-1;8386:2:229;8371:18;;8358:32;8399:50;8358:32;8399:50;:::i;:::-;8468:7;-1:-1:-1;8522:2:229;8507:18;;8494:32;;-1:-1:-1;8578:2:229;8563:18;;8550:32;8591:50;8550:32;8591:50;:::i;:::-;8660:7;-1:-1:-1;8686:38:229;8719:3;8704:19;;8686:38;:::i;:::-;8676:48;;8743:38;8776:3;8765:9;8761:19;8743:38;:::i;:::-;8733:48;;7967:820;;;;;;;;:::o;8792:184::-;8850:6;8903:2;8891:9;8882:7;8878:23;8874:32;8871:52;;;8919:1;8916;8909:12;8871:52;8942:28;8960:9;8942:28;:::i;9402:118::-;9488:5;9481:13;9474:21;9467:5;9464:32;9454:60;;9510:1;9507;9500:12;9525:399;9590:6;9598;9651:2;9639:9;9630:7;9626:23;9622:32;9619:52;;;9667:1;9664;9657:12;9619:52;9706:9;9693:23;9725:48;9767:5;9725:48;:::i;:::-;9792:5;-1:-1:-1;9849:2:229;9834:18;;9821:32;9862:30;9821:32;9862:30;:::i;10198:268::-;10268:6;10321:2;10309:9;10300:7;10296:23;10292:32;10289:52;;;10337:1;10334;10327:12;10289:52;10369:9;10363:16;10388:48;10430:5;10388:48;:::i;10471:406::-;10673:2;10655:21;;;10712:2;10692:18;;;10685:30;10751:34;10746:2;10731:18;;10724:62;-1:-1:-1;;;10817:2:229;10802:18;;10795:40;10867:3;10852:19;;10471:406::o;10882:245::-;10949:6;11002:2;10990:9;10981:7;10977:23;10973:32;10970:52;;;11018:1;11015;11008:12;10970:52;11050:9;11044:16;11069:28;11091:5;11069:28;:::i;11132:404::-;11334:2;11316:21;;;11373:2;11353:18;;;11346:30;11412:34;11407:2;11392:18;;11385:62;-1:-1:-1;;;11478:2:229;11463:18;;11456:38;11526:3;11511:19;;11132:404::o;12355:349::-;12557:2;12539:21;;;12596:2;12576:18;;;12569:30;12635:27;12630:2;12615:18;;12608:55;12695:2;12680:18;;12355:349::o;12709:355::-;12911:2;12893:21;;;12950:2;12930:18;;;12923:30;12989:33;12984:2;12969:18;;12962:61;13055:2;13040:18;;12709:355::o;13069:127::-;13130:10;13125:3;13121:20;13118:1;13111:31;13161:4;13158:1;13151:15;13185:4;13182:1;13175:15;13201:331;13300:4;13358:11;13345:25;13452:3;13448:8;13437;13421:14;13417:29;13413:44;13393:18;13389:69;13379:97;;13472:1;13469;13462:12;13379:97;13493:33;;;;;13201:331;-1:-1:-1;;13201:331:229:o;13537:836::-;13667:6;13662:3;13655:19;13637:3;13693:4;13722:2;13717:3;13713:12;13706:19;;13748:5;13771:1;13792;13802:546;13818:6;13813:3;13810:15;13802:546;;;13899:6;13886:20;13919:50;13961:7;13919:50;:::i;:::-;-1:-1:-1;;;;;13994:33:229;13982:46;;14069:15;;;14056:29;14121:26;14108:40;;14171:15;;;14161:43;;14200:1;14197;14190:12;14161:43;14224:12;;;14217:24;-1:-1:-1;14264:4:229;14288:12;;;;14323:15;;;;;13844:1;13835:11;13802:546;;;-1:-1:-1;14364:3:229;;13537:836;-1:-1:-1;;;;;;13537:836:229:o;14378:1105::-;14442:3;14499:5;14486:19;14584:2;14580:7;14572:5;14556:14;14552:26;14548:40;14528:18;14524:65;14514:93;;14603:1;14600;14593:12;14514:93;14631:30;;14684:21;;14728:18;14717:30;;14714:50;;;14760:1;14757;14750:12;14714:50;14814:6;14811:1;14807:14;14791;14787:35;14780:5;14776:47;14773:67;;;14836:1;14833;14826:12;14773:67;14861:4;14856:3;14849:17;14887:111;14992:4;14987:3;14983:14;14975:6;14968:4;14959:7;14955:18;14887:111;:::i;:::-;14875:123;;;15027:44;15065:4;15058:5;15054:16;15027:44;:::i;:::-;-1:-1:-1;;;;;3593:31:229;15140:4;15131:14;;3581:44;15202:4;15191:16;;;15178:30;15162:14;;;15155:54;15240:35;15269:4;15258:16;;15240:35;:::i;:::-;90:10;79:22;15327:4;15318:14;;67:35;15364;15393:4;15382:16;;15364:35;:::i;:::-;90:10;79:22;;15451:4;15442:14;;67:35;-1:-1:-1;15473:4:229;14378:1105;-1:-1:-1;;;14378:1105:229:o;15488:454::-;15766:1;15762;15757:3;15753:11;15749:19;15741:6;15737:32;15726:9;15719:51;15806:6;15801:2;15790:9;15786:18;15779:34;15849:2;15844;15833:9;15829:18;15822:30;15700:4;15869:67;15932:2;15921:9;15917:18;15909:6;15869:67;:::i;:::-;15861:75;15488:454;-1:-1:-1;;;;;15488:454:229:o;15947:473::-;16149:2;16131:21;;;16188:2;16168:18;;;16161:30;-1:-1:-1;;;;;;;;;;;16222:2:229;16207:18;;16200:62;16298:34;16293:2;16278:18;;16271:62;-1:-1:-1;;;16364:3:229;16349:19;;16342:36;16410:3;16395:19;;15947:473::o;16425:127::-;16486:10;16481:3;16477:20;16474:1;16467:31;16517:4;16514:1;16507:15;16541:4;16538:1;16531:15;16557:128;16597:3;16628:1;16624:6;16621:1;16618:13;16615:39;;;16634:18;;:::i;:::-;-1:-1:-1;16670:9:229;;16557:128::o;16690:286::-;16883:2;16872:9;16865:21;16846:4;16903:67;16966:2;16955:9;16951:18;16943:6;16903:67;:::i;17266:135::-;17305:3;-1:-1:-1;;17326:17:229;;17323:43;;;17346:18;;:::i;:::-;-1:-1:-1;17393:1:229;17382:13;;17266:135::o;17835:544::-;17927:4;17933:6;17993:11;17980:25;18087:2;18083:7;18072:8;18056:14;18052:29;18048:43;18028:18;18024:68;18014:96;;18106:1;18103;18096:12;18014:96;18133:33;;18185:20;;;-1:-1:-1;18228:18:229;18217:30;;18214:50;;;18260:1;18257;18250:12;18214:50;18293:4;18281:17;;-1:-1:-1;18344:1:229;18340:14;;;18324;18320:35;18310:46;;18307:66;;;18369:1;18366;18359:12;18307:66;17835:544;;;;;:::o;18384:585::-;18517:4;18523:6;18583:11;18570:25;18677:2;18673:7;18662:8;18646:14;18642:29;18638:43;18618:18;18614:68;18604:96;;18696:1;18693;18686:12;18604:96;18723:33;;18775:20;;;-1:-1:-1;18818:18:229;18807:30;;18804:50;;;18850:1;18847;18840:12;18804:50;18883:4;18871:17;;-1:-1:-1;18934:1:229;18930:14;;;18914;18910:35;18900:46;;18897:66;;;18959:1;18956;18949:12;19468:125;19508:4;19536:1;19533;19530:8;19527:34;;;19541:18;;:::i;:::-;-1:-1:-1;19578:9:229;;19468:125::o;21363:228::-;21402:3;21430:10;21467:2;21464:1;21460:10;21497:2;21494:1;21490:10;21528:3;21524:2;21520:12;21515:3;21512:21;21509:47;;;21536:18;;:::i;:::-;21572:13;;21363:228;-1:-1:-1;;;;21363:228:229:o;22685:221::-;22724:4;22753:10;22813;;;;22783;;22835:12;;;22832:38;;;22850:18;;:::i;:::-;22887:13;;22685:221;-1:-1:-1;;;22685:221:229:o;22911:185::-;22949:3;22993:10;22986:5;22982:22;23023:7;23013:41;;23034:18;;:::i;:::-;-1:-1:-1;;23070:20:229;;22911:185;-1:-1:-1;;22911:185:229:o;28292:127::-;28353:10;28348:3;28344:20;28341:1;28334:31;28384:4;28381:1;28374:15;28408:4;28405:1;28398:15;28424:183;28455:1;28481:10;28518:2;28515:1;28511:10;28540:3;28530:37;;28547:18;;:::i;:::-;28585:10;;28581:20;;;;;28424:183;-1:-1:-1;;28424:183:229:o;34163:521::-;34240:4;34246:6;34306:11;34293:25;34400:2;34396:7;34385:8;34369:14;34365:29;34361:43;34341:18;34337:68;34327:96;;34419:1;34416;34409:12;34327:96;34446:33;;34498:20;;;-1:-1:-1;34541:18:229;34530:30;;34527:50;;;34573:1;34570;34563:12;34527:50;34606:4;34594:17;;-1:-1:-1;34637:14:229;34633:27;;;34623:38;;34620:58;;;34674:1;34671;34664:12;36869:120;36909:1;36935;36925:35;;36940:18;;:::i;:::-;-1:-1:-1;36974:9:229;;36869:120::o;39575:258::-;39647:1;39657:113;39671:6;39668:1;39665:13;39657:113;;;39747:11;;;39741:18;39728:11;;;39721:39;39693:2;39686:10;39657:113;;;39788:6;39785:1;39782:13;39779:48;;;-1:-1:-1;;39823:1:229;39805:16;;39798:27;39575:258::o;39838:274::-;39967:3;40005:6;39999:13;40021:53;40067:6;40062:3;40055:4;40047:6;40043:17;40021:53;:::i;40117:112::-;40149:1;40175;40165:35;;40180:18;;:::i;:::-;-1:-1:-1;40214:9:229;;40117:112::o;40718:383::-;40867:2;40856:9;40849:21;40830:4;40899:6;40893:13;40942:6;40937:2;40926:9;40922:18;40915:34;40958:66;41017:6;41012:2;41001:9;40997:18;40992:2;40984:6;40980:15;40958:66;:::i;:::-;41085:2;41064:15;-1:-1:-1;;41060:29:229;41045:45;;;;41092:2;41041:54;;40718:383;-1:-1:-1;;40718:383:229:o",
		"linkReferences": {},
		"immutableReferences": {
			"55886": [
				{
					"start": 6679,
					"length": 32
				}
			],
			"57105": [
				{
					"start": 1555,
					"length": 32
				},
				{
					"start": 8009,
					"length": 32
				},
				{
					"start": 8209,
					"length": 32
				}
			],
			"57108": [
				{
					"start": 1825,
					"length": 32
				},
				{
					"start": 7840,
					"length": 32
				}
			],
			"57111": [
				{
					"start": 1064,
					"length": 32
				},
				{
					"start": 8442,
					"length": 32
				}
			],
			"57114": [
				{
					"start": 660,
					"length": 32
				},
				{
					"start": 8681,
					"length": 32
				}
			],
			"57117": [
				{
					"start": 1025,
					"length": 32
				},
				{
					"start": 8523,
					"length": 32
				}
			],
			"57125": [
				{
					"start": 1767,
					"length": 32
				}
			],
			"57129": [
				{
					"start": 1103,
					"length": 32
				},
				{
					"start": 8960,
					"length": 32
				}
			]
		}
	},
	"methodIdentifiers": {
		"CALCULATION_INTERVAL_SECONDS()": "9d45c281",
		"GENESIS_PAYMENT_TIMESTAMP()": "2cfd45eb",
		"MAX_FUTURE_LENGTH()": "04a0c502",
		"MAX_PAYMENT_DURATION()": "ee619597",
		"MAX_RETROACTIVE_LENGTH()": "37838ed0",
		"activationDelay()": "3a8c0786",
		"beaconChainETHStrategy()": "9104c319",
		"calculateEarnerLeafHash((address,bytes32))": "149bc872",
		"calculateTokenLeafHash((address,uint256))": "f8cd8448",
		"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": "5e9d8348",
		"claimerFor(address)": "2b9f64a4",
		"cumulativeClaimed(address,address)": "865c6953",
		"currPaymentCalculationEndTimestamp()": "67ef8585",
		"delegationManager()": "ea4d3c9b",
		"distributionRoots(uint256)": "5971b3f8",
		"domainSeparator()": "f698da25",
		"getDistributionRootsLength()": "7b8f8b05",
		"getRootIndexFromHash(bytes32)": "e810ce21",
		"globalOperatorCommissionBips()": "092db007",
		"initialize(address,address,uint256,address,uint32,uint16)": "d4540a55",
		"isPayAllForRangeSubmitter(address)": "146cd61d",
		"isRangePaymentForAllHash(address,bytes32)": "73f2fbea",
		"isRangePaymentHash(address,bytes32)": "c8371b46",
		"operatorCommissionBips(address,address)": "22f19a64",
		"owner()": "8da5cb5b",
		"pause(uint256)": "136439dd",
		"pauseAll()": "595c6a67",
		"paused()": "5c975abb",
		"paused(uint8)": "5ac86ab7",
		"pauserRegistry()": "886f1195",
		"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": "b5715284",
		"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": "1b445516",
		"paymentNonce(address)": "d588cefa",
		"paymentUpdater()": "66d3b16b",
		"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": "3ccc861d",
		"renounceOwnership()": "715018a6",
		"setActivationDelay(uint32)": "58baaa3e",
		"setClaimerFor(address)": "a0169ddd",
		"setGlobalOperatorCommission(uint16)": "e221b245",
		"setPauserRegistry(address)": "10d67a2f",
		"setPayAllForRangeSubmitter(address,bool)": "ec1680de",
		"setPaymentUpdater(address)": "18190f53",
		"strategyManager()": "39b70e38",
		"submitRoot(bytes32,uint32)": "3efe1db6",
		"transferOwnership(address)": "f2fde38b",
		"unpause(uint256)": "fabc1cbc"
	},
	"rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_CALCULATION_INTERVAL_SECONDS\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_PAYMENT_DURATION\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_RETROACTIVE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_MAX_FUTURE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_GENESIS_PAYMENT_TIMESTAMP\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldActivationDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newActivationDelay\",\"type\":\"uint32\"}],\"name\":\"ActivationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldClaimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerForSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"paymentCalculationEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"name\":\"DistributionRootSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldGlobalCommissionBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newGlobalCommissionBips\",\"type\":\"uint16\"}],\"name\":\"GlobalCommissionBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payAllForRangeSubmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"PayAllForRangeSubmitterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"PaymentClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPaymentUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPaymentUpdater\",\"type\":\"address\"}],\"name\":\"PaymentUpdaterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"paymentNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rangePaymentHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPaymentCoordinator.RangePayment\",\"name\":\"rangePayment\",\"type\":\"tuple\"}],\"name\":\"RangePaymentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"paymentNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rangePaymentHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPaymentCoordinator.RangePayment\",\"name\":\"rangePayment\",\"type\":\"tuple\"}],\"name\":\"RangePaymentForAllCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALCULATION_INTERVAL_SECONDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENESIS_PAYMENT_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUTURE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PAYMENT_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RETROACTIVE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateEarnerLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateTokenLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPaymentCoordinator.PaymentMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"checkClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimerFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currPaymentCalculationEndTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationManager\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distributionRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"paymentCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionRootsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"getRootIndexFromHash\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalOperatorCommissionBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentUpdater\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_globalCommissionBips\",\"type\":\"uint16\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPayAllForRangeSubmitter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isRangePaymentForAllHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isRangePaymentHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"operatorCommissionBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IPaymentCoordinator.RangePayment[]\",\"name\":\"rangePayments\",\"type\":\"tuple[]\"}],\"name\":\"payAllForRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IPaymentCoordinator.RangePayment[]\",\"name\":\"rangePayments\",\"type\":\"tuple[]\"}],\"name\":\"payForRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paymentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPaymentCoordinator.PaymentMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"}],\"name\":\"setActivationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_globalCommissionBips\",\"type\":\"uint16\"}],\"name\":\"setGlobalOperatorCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setPayAllForRangeSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentUpdater\",\"type\":\"address\"}],\"name\":\"setPaymentUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"paymentCalculationEndTimestamp\",\"type\":\"uint32\"}],\"name\":\"submitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eigen Labs Inc.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the immutable variables for the contract\"},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"initialize(address,address,uint256,address,uint32,uint16)\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, paymentUpdater and configures the initial paused status, activationDelay, and globalOperatorCommissionBips.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rangePayments\":\"The range payments being created\"}},\"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the payment is being madeThe duration of the `rangePayment` cannot exceed `MAX_PAYMENT_DURATION`The tokens are sent to the `PaymentCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rangePayment` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths\",\"params\":{\"rangePayments\":\"The range payments being created\"}},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the payments.\",\"params\":{\"claim\":\"The PaymentMerkleClaim to be processed. Contains the root index, earner, payment leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 payments\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setActivationDelay(uint32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_activationDelay\":\"The new value for activationDelay\"}},\"setClaimerFor(address)\":{\"details\":\"Only callable by the `earner`\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\"}},\"setGlobalOperatorCommission(uint16)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_globalCommissionBips\":\"The commission for all operators across all avss\"}},\"setPayAllForRangeSubmitter(address,bool)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_newValue\":\"The new value for isPayAllForRangeSubmitter\",\"_submitter\":\"The address of the payAllForRangeSubmitter\"}},\"setPaymentUpdater(address)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_paymentUpdater\":\"The address of the new paymentUpdater\"}},\"submitRoot(bytes32,uint32)\":{\"details\":\"Only callable by the paymentUpdater\",\"params\":{\"paymentCalculationEndTimestamp\":\"The timestamp until which payments have been calculated\",\"root\":\"The merkle root of the distribution\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"stateVariables\":{\"EARNER_LEAF_SALT\":{\"details\":\"Salt for the earner leaf, meant to distinguish from tokenLeaf since they have the same sized data\"},\"ORIGINAL_CHAIN_ID\":{\"details\":\"Chain ID at the time of contract deployment\"},\"PAUSED_CLAIM_PAYMENTS\":{\"details\":\"Index for flag that pauses\"},\"PAUSED_PAY_ALL_FOR_RANGE\":{\"details\":\"Index for flag that pauses payAllForRange payments\"},\"PAUSED_PAY_FOR_RANGE\":{\"details\":\"Index for flag that pauses payForRange payments\"},\"PAUSED_SUBMIT_ROOTS\":{\"details\":\"Index for flag that pauses submitRoots\"},\"TOKEN_LEAF_SALT\":{\"details\":\"Salt for the token leaf, meant to distinguish from earnerLeaf since they have the same sized data\"}},\"title\":\"PaymentCoordinator\",\"version\":1},\"userdoc\":{\"events\":{\"DistributionRootSubmitted(uint32,bytes32,uint32,uint32)\":{\"notice\":\"rootIndex is the specific array index of the newly created root in the storage array\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"PaymentClaimed(bytes32,address,address,address,address,uint256)\":{\"notice\":\"root is one of the submitted distribution roots that was claimed against\"},\"PaymentUpdaterSet(address,address)\":{\"notice\":\"paymentUpdater is responsible for submiting DistributionRoots, only owner can set paymentUpdater\"},\"RangePaymentCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when an AVS creates a valid RangePayment\"},\"RangePaymentForAllCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RangePayment is created for all stakers by a valid submitter\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"CALCULATION_INTERVAL_SECONDS()\":{\"notice\":\"The interval in seconds at which the calculation for range payment distribution is done.\"},\"GENESIS_PAYMENT_TIMESTAMP()\":{\"notice\":\"absolute min timestamp (seconds) that a payment can start at\"},\"MAX_FUTURE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a payment can start in the future\"},\"MAX_PAYMENT_DURATION()\":{\"notice\":\"The maximum amount of time (seconds) that a range payment can span over\"},\"MAX_RETROACTIVE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a payment can start in the past\"},\"activationDelay()\":{\"notice\":\"Delay in timestamp (seconds) before a posted root can be claimed against\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateEarnerLeafHash((address,bytes32))\":{\"notice\":\"return the hash of the earner's leaf\"},\"calculateTokenLeafHash((address,uint256))\":{\"notice\":\"returns the hash of the earner's token leaf\"},\"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid\"},\"claimerFor(address)\":{\"notice\":\"Mapping: earner => the address of the entity who can call `processClaim` on behalf of the earner\"},\"cumulativeClaimed(address,address)\":{\"notice\":\"Mapping: earner => token => total amount claimed\"},\"currPaymentCalculationEndTimestamp()\":{\"notice\":\"Timestamp for last submitted DistributionRoot\"},\"delegationManager()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"distributionRoots(uint256)\":{\"notice\":\"list of roots submitted by the paymentUpdater\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"getRootIndexFromHash(bytes32)\":{\"notice\":\"loop through distribution roots from reverse and return hash\"},\"globalOperatorCommissionBips()\":{\"notice\":\"Slot 4the commission for all operators across all avss\"},\"isPayAllForRangeSubmitter(address)\":{\"notice\":\"Mapping: address => bool to check if the address is permissioned to submit payAllForRange\"},\"isRangePaymentForAllHash(address,bytes32)\":{\"notice\":\"Mapping: avs => rangePaymentForALlHash => bool to check if range payment hash for all has been submitted\"},\"isRangePaymentHash(address,bytes32)\":{\"notice\":\"Mapping: avs => rangePaymentHash => bool to check if range payment hash has been submitted\"},\"operatorCommissionBips(address,address)\":{\"notice\":\"the commission for a specific operator for a specific avs NOTE: Currently unused and simply returns the globalOperatorCommissionBips value but will be used in future release\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"similar to `payForRange` except the payment is split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isPayAllForRangeSubmitter mapping.\"},\"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new range payment on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`\"},\"paymentNonce(address)\":{\"notice\":\"Used for unique rangePaymentHashes per AVS and for PayAllForRangeSubmitters\"},\"paymentUpdater()\":{\"notice\":\"Slot 3The address of the entity that can update the contract with new merkle roots\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"notice\":\"Claim payments against a given root (read from distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"setActivationDelay(uint32)\":{\"notice\":\"Sets the delay in timestamp before a posted root can be claimed against\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on behalf of the earner (msg.sender)\"},\"setGlobalOperatorCommission(uint16)\":{\"notice\":\"Sets the global commission for all operators across all avss\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setPayAllForRangeSubmitter(address,bool)\":{\"notice\":\"Sets the permissioned `payAllForRangeSubmitter` address which can submit payAllForRange\"},\"setPaymentUpdater(address)\":{\"notice\":\"Sets the permissioned `paymentUpdater` address which can post new roots\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"submitRoot(bytes32,uint32)\":{\"notice\":\"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for payments in EigenLayer. The main functionalities of this contract are - enabling any ERC20 payments from AVSs to their operators and stakers for a given time range - allowing stakers and operators to claim their earnings including a commission bips for operators - allowing the protocol to provide ERC20 tokens to stakers over a specified time range\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/PaymentCoordinator.sol\":\"PaymentCoordinator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"src/contracts/core/PaymentCoordinator.sol\":{\"keccak256\":\"0x4a05f933945fd190549cc0ae7e6801556a824da950614e9663522c96ed3bd65d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ca8f60e913f018464253dcc1f66f2f97540bff170d71965fd06be0df1486597f\",\"dweb:/ipfs/QmbjrJJQFffeoMFy8aboQAzcwUVa3V86ippvEJQFLbRDeY\"]},\"src/contracts/core/PaymentCoordinatorStorage.sol\":{\"keccak256\":\"0xc1bf8d41688b3b94ec04cd7328836c79023d200b5ed36887a342d124898a9d7a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db7086ae274e1add5701880431e44c0a67305b2cb437c4a7be4e5df66cbf72e9\",\"dweb:/ipfs/QmbwEkWHx13APxb1DYtkbURpL9NVFxz2Pc5rYrH1zYVXLW\"]},\"src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x3f67ab9b510b02dc3c07014b49785f1e167401bdb39cc10f737bbf545632d938\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48d1267e2df6c8ac9b8f419269ff3d23be9b62606ee6b6d2278c27ffebfd73aa\",\"dweb:/ipfs/QmaFyywKCm1eotKjF1evryW8BMQJzPDstZm1wMRW79phXG\"]},\"src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa\",\"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"src/contracts/interfaces/IPaymentCoordinator.sol\":{\"keccak256\":\"0x399d4d6a99f8d9ca0a1f422e11d5c2c1784bd1c4118859c17cdb1fabfc0367e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abfa22018a78703c39c082b929ebf7b73484f8ef86c2e0264c212004f5fac8a0\",\"dweb:/ipfs/QmVqAexXLD7zbAmbrRHkmQaVjgSahnoY2XpzNvKrLLsyet\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821\",\"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7\",\"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq\"]},\"src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373\",\"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f\",\"dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a\",\"dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S\"]}},\"version\":1}",
	"metadata": {
		"compiler": {
			"version": "0.8.12+commit.f00d7308"
		},
		"language": "Solidity",
		"output": {
			"abi": [
				{
					"inputs": [
						{
							"internalType": "contract IDelegationManager",
							"name": "_delegationManager",
							"type": "address"
						},
						{
							"internalType": "contract IStrategyManager",
							"name": "_strategyManager",
							"type": "address"
						},
						{
							"internalType": "uint32",
							"name": "_CALCULATION_INTERVAL_SECONDS",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "_MAX_PAYMENT_DURATION",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "_MAX_RETROACTIVE_LENGTH",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "_MAX_FUTURE_LENGTH",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "_GENESIS_PAYMENT_TIMESTAMP",
							"type": "uint32"
						}
					],
					"stateMutability": "nonpayable",
					"type": "constructor"
				},
				{
					"inputs": [
						{
							"internalType": "uint32",
							"name": "oldActivationDelay",
							"type": "uint32",
							"indexed": false
						},
						{
							"internalType": "uint32",
							"name": "newActivationDelay",
							"type": "uint32",
							"indexed": false
						}
					],
					"type": "event",
					"name": "ActivationDelaySet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "earner",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "oldClaimer",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "claimer",
							"type": "address",
							"indexed": true
						}
					],
					"type": "event",
					"name": "ClaimerForSet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "uint32",
							"name": "rootIndex",
							"type": "uint32",
							"indexed": true
						},
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32",
							"indexed": true
						},
						{
							"internalType": "uint32",
							"name": "paymentCalculationEndTimestamp",
							"type": "uint32",
							"indexed": true
						},
						{
							"internalType": "uint32",
							"name": "activatedAt",
							"type": "uint32",
							"indexed": false
						}
					],
					"type": "event",
					"name": "DistributionRootSubmitted",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "uint16",
							"name": "oldGlobalCommissionBips",
							"type": "uint16",
							"indexed": false
						},
						{
							"internalType": "uint16",
							"name": "newGlobalCommissionBips",
							"type": "uint16",
							"indexed": false
						}
					],
					"type": "event",
					"name": "GlobalCommissionBipsSet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "uint8",
							"name": "version",
							"type": "uint8",
							"indexed": false
						}
					],
					"type": "event",
					"name": "Initialized",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "previousOwner",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "newOwner",
							"type": "address",
							"indexed": true
						}
					],
					"type": "event",
					"name": "OwnershipTransferred",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "account",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "uint256",
							"name": "newPausedStatus",
							"type": "uint256",
							"indexed": false
						}
					],
					"type": "event",
					"name": "Paused",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "contract IPauserRegistry",
							"name": "pauserRegistry",
							"type": "address",
							"indexed": false
						},
						{
							"internalType": "contract IPauserRegistry",
							"name": "newPauserRegistry",
							"type": "address",
							"indexed": false
						}
					],
					"type": "event",
					"name": "PauserRegistrySet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "payAllForRangeSubmitter",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "bool",
							"name": "oldValue",
							"type": "bool",
							"indexed": true
						},
						{
							"internalType": "bool",
							"name": "newValue",
							"type": "bool",
							"indexed": true
						}
					],
					"type": "event",
					"name": "PayAllForRangeSubmitterSet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32",
							"indexed": false
						},
						{
							"internalType": "address",
							"name": "earner",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "claimer",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "recipient",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "contract IERC20",
							"name": "token",
							"type": "address",
							"indexed": false
						},
						{
							"internalType": "uint256",
							"name": "claimedAmount",
							"type": "uint256",
							"indexed": false
						}
					],
					"type": "event",
					"name": "PaymentClaimed",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "oldPaymentUpdater",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "address",
							"name": "newPaymentUpdater",
							"type": "address",
							"indexed": true
						}
					],
					"type": "event",
					"name": "PaymentUpdaterSet",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "avs",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "uint256",
							"name": "paymentNonce",
							"type": "uint256",
							"indexed": true
						},
						{
							"internalType": "bytes32",
							"name": "rangePaymentHash",
							"type": "bytes32",
							"indexed": true
						},
						{
							"internalType": "struct IPaymentCoordinator.RangePayment",
							"name": "rangePayment",
							"type": "tuple",
							"components": [
								{
									"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
									"name": "strategiesAndMultipliers",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "multiplier",
											"type": "uint96"
										}
									]
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "startTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"indexed": false
						}
					],
					"type": "event",
					"name": "RangePaymentCreated",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "submitter",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "uint256",
							"name": "paymentNonce",
							"type": "uint256",
							"indexed": true
						},
						{
							"internalType": "bytes32",
							"name": "rangePaymentHash",
							"type": "bytes32",
							"indexed": true
						},
						{
							"internalType": "struct IPaymentCoordinator.RangePayment",
							"name": "rangePayment",
							"type": "tuple",
							"components": [
								{
									"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
									"name": "strategiesAndMultipliers",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "multiplier",
											"type": "uint96"
										}
									]
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "startTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"indexed": false
						}
					],
					"type": "event",
					"name": "RangePaymentForAllCreated",
					"anonymous": false
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "account",
							"type": "address",
							"indexed": true
						},
						{
							"internalType": "uint256",
							"name": "newPausedStatus",
							"type": "uint256",
							"indexed": false
						}
					],
					"type": "event",
					"name": "Unpaused",
					"anonymous": false
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "CALCULATION_INTERVAL_SECONDS",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "GENESIS_PAYMENT_TIMESTAMP",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "MAX_FUTURE_LENGTH",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "MAX_PAYMENT_DURATION",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "MAX_RETROACTIVE_LENGTH",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "activationDelay",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "beaconChainETHStrategy",
					"outputs": [
						{
							"internalType": "contract IStrategy",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
							"name": "leaf",
							"type": "tuple",
							"components": [
								{
									"internalType": "address",
									"name": "earner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "earnerTokenRoot",
									"type": "bytes32"
								}
							]
						}
					],
					"stateMutability": "pure",
					"type": "function",
					"name": "calculateEarnerLeafHash",
					"outputs": [
						{
							"internalType": "bytes32",
							"name": "",
							"type": "bytes32"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf",
							"name": "leaf",
							"type": "tuple",
							"components": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cumulativeEarnings",
									"type": "uint256"
								}
							]
						}
					],
					"stateMutability": "pure",
					"type": "function",
					"name": "calculateTokenLeafHash",
					"outputs": [
						{
							"internalType": "bytes32",
							"name": "",
							"type": "bytes32"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.PaymentMerkleClaim",
							"name": "claim",
							"type": "tuple",
							"components": [
								{
									"internalType": "uint32",
									"name": "rootIndex",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "earnerIndex",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "earnerTreeProof",
									"type": "bytes"
								},
								{
									"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
									"name": "earnerLeaf",
									"type": "tuple",
									"components": [
										{
											"internalType": "address",
											"name": "earner",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "earnerTokenRoot",
											"type": "bytes32"
										}
									]
								},
								{
									"internalType": "uint32[]",
									"name": "tokenIndices",
									"type": "uint32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "tokenTreeProofs",
									"type": "bytes[]"
								},
								{
									"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf[]",
									"name": "tokenLeaves",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IERC20",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "cumulativeEarnings",
											"type": "uint256"
										}
									]
								}
							]
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "checkClaim",
					"outputs": [
						{
							"internalType": "bool",
							"name": "",
							"type": "bool"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "claimerFor",
					"outputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						},
						{
							"internalType": "contract IERC20",
							"name": "",
							"type": "address"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "cumulativeClaimed",
					"outputs": [
						{
							"internalType": "uint256",
							"name": "",
							"type": "uint256"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "currPaymentCalculationEndTimestamp",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "delegationManager",
					"outputs": [
						{
							"internalType": "contract IDelegationManager",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "uint256",
							"name": "",
							"type": "uint256"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "distributionRoots",
					"outputs": [
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32"
						},
						{
							"internalType": "uint32",
							"name": "paymentCalculationEndTimestamp",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "activatedAt",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "domainSeparator",
					"outputs": [
						{
							"internalType": "bytes32",
							"name": "",
							"type": "bytes32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "getDistributionRootsLength",
					"outputs": [
						{
							"internalType": "uint256",
							"name": "",
							"type": "uint256"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "bytes32",
							"name": "rootHash",
							"type": "bytes32"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "getRootIndexFromHash",
					"outputs": [
						{
							"internalType": "uint32",
							"name": "",
							"type": "uint32"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "globalOperatorCommissionBips",
					"outputs": [
						{
							"internalType": "uint16",
							"name": "",
							"type": "uint16"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "initialOwner",
							"type": "address"
						},
						{
							"internalType": "contract IPauserRegistry",
							"name": "_pauserRegistry",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "initialPausedStatus",
							"type": "uint256"
						},
						{
							"internalType": "address",
							"name": "_paymentUpdater",
							"type": "address"
						},
						{
							"internalType": "uint32",
							"name": "_activationDelay",
							"type": "uint32"
						},
						{
							"internalType": "uint16",
							"name": "_globalCommissionBips",
							"type": "uint16"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "initialize"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "isPayAllForRangeSubmitter",
					"outputs": [
						{
							"internalType": "bool",
							"name": "",
							"type": "bool"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						},
						{
							"internalType": "bytes32",
							"name": "",
							"type": "bytes32"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "isRangePaymentForAllHash",
					"outputs": [
						{
							"internalType": "bool",
							"name": "",
							"type": "bool"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						},
						{
							"internalType": "bytes32",
							"name": "",
							"type": "bytes32"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "isRangePaymentHash",
					"outputs": [
						{
							"internalType": "bool",
							"name": "",
							"type": "bool"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "operator",
							"type": "address"
						},
						{
							"internalType": "address",
							"name": "avs",
							"type": "address"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "operatorCommissionBips",
					"outputs": [
						{
							"internalType": "uint16",
							"name": "",
							"type": "uint16"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "owner",
					"outputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "uint256",
							"name": "newPausedStatus",
							"type": "uint256"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "pause"
				},
				{
					"inputs": [],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "pauseAll"
				},
				{
					"inputs": [
						{
							"internalType": "uint8",
							"name": "index",
							"type": "uint8"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "paused",
					"outputs": [
						{
							"internalType": "bool",
							"name": "",
							"type": "bool"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "paused",
					"outputs": [
						{
							"internalType": "uint256",
							"name": "",
							"type": "uint256"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "pauserRegistry",
					"outputs": [
						{
							"internalType": "contract IPauserRegistry",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.RangePayment[]",
							"name": "rangePayments",
							"type": "tuple[]",
							"components": [
								{
									"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
									"name": "strategiesAndMultipliers",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "multiplier",
											"type": "uint96"
										}
									]
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "startTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							]
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "payAllForRange"
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.RangePayment[]",
							"name": "rangePayments",
							"type": "tuple[]",
							"components": [
								{
									"internalType": "struct IPaymentCoordinator.StrategyAndMultiplier[]",
									"name": "strategiesAndMultipliers",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "multiplier",
											"type": "uint96"
										}
									]
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "startTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							]
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "payForRange"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					],
					"stateMutability": "view",
					"type": "function",
					"name": "paymentNonce",
					"outputs": [
						{
							"internalType": "uint256",
							"name": "",
							"type": "uint256"
						}
					]
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "paymentUpdater",
					"outputs": [
						{
							"internalType": "address",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "struct IPaymentCoordinator.PaymentMerkleClaim",
							"name": "claim",
							"type": "tuple",
							"components": [
								{
									"internalType": "uint32",
									"name": "rootIndex",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "earnerIndex",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "earnerTreeProof",
									"type": "bytes"
								},
								{
									"internalType": "struct IPaymentCoordinator.EarnerTreeMerkleLeaf",
									"name": "earnerLeaf",
									"type": "tuple",
									"components": [
										{
											"internalType": "address",
											"name": "earner",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "earnerTokenRoot",
											"type": "bytes32"
										}
									]
								},
								{
									"internalType": "uint32[]",
									"name": "tokenIndices",
									"type": "uint32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "tokenTreeProofs",
									"type": "bytes[]"
								},
								{
									"internalType": "struct IPaymentCoordinator.TokenTreeMerkleLeaf[]",
									"name": "tokenLeaves",
									"type": "tuple[]",
									"components": [
										{
											"internalType": "contract IERC20",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "cumulativeEarnings",
											"type": "uint256"
										}
									]
								}
							]
						},
						{
							"internalType": "address",
							"name": "recipient",
							"type": "address"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "processClaim"
				},
				{
					"inputs": [],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "renounceOwnership"
				},
				{
					"inputs": [
						{
							"internalType": "uint32",
							"name": "_activationDelay",
							"type": "uint32"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setActivationDelay"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "claimer",
							"type": "address"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setClaimerFor"
				},
				{
					"inputs": [
						{
							"internalType": "uint16",
							"name": "_globalCommissionBips",
							"type": "uint16"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setGlobalOperatorCommission"
				},
				{
					"inputs": [
						{
							"internalType": "contract IPauserRegistry",
							"name": "newPauserRegistry",
							"type": "address"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setPauserRegistry"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "_submitter",
							"type": "address"
						},
						{
							"internalType": "bool",
							"name": "_newValue",
							"type": "bool"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setPayAllForRangeSubmitter"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "_paymentUpdater",
							"type": "address"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "setPaymentUpdater"
				},
				{
					"inputs": [],
					"stateMutability": "view",
					"type": "function",
					"name": "strategyManager",
					"outputs": [
						{
							"internalType": "contract IStrategyManager",
							"name": "",
							"type": "address"
						}
					]
				},
				{
					"inputs": [
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32"
						},
						{
							"internalType": "uint32",
							"name": "paymentCalculationEndTimestamp",
							"type": "uint32"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "submitRoot"
				},
				{
					"inputs": [
						{
							"internalType": "address",
							"name": "newOwner",
							"type": "address"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "transferOwnership"
				},
				{
					"inputs": [
						{
							"internalType": "uint256",
							"name": "newPausedStatus",
							"type": "uint256"
						}
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "unpause"
				}
			],
			"devdoc": {
				"kind": "dev",
				"methods": {
					"constructor": {
						"details": "Sets the immutable variables for the contract"
					},
					"domainSeparator()": {
						"details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."
					},
					"initialize(address,address,uint256,address,uint32,uint16)": {
						"details": "Initializes the addresses of the initial owner, pauser registry, paymentUpdater and configures the initial paused status, activationDelay, and globalOperatorCommissionBips."
					},
					"owner()": {
						"details": "Returns the address of the current owner."
					},
					"pause(uint256)": {
						"details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
						"params": {
							"newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
						}
					},
					"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": {
						"params": {
							"rangePayments": "The range payments being created"
						}
					},
					"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": {
						"details": "Expected to be called by the ServiceManager of the AVS on behalf of which the payment is being madeThe duration of the `rangePayment` cannot exceed `MAX_PAYMENT_DURATION`The tokens are sent to the `PaymentCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rangePayment` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths",
						"params": {
							"rangePayments": "The range payments being created"
						}
					},
					"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
						"details": "only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the payments.",
						"params": {
							"claim": "The PaymentMerkleClaim to be processed. Contains the root index, earner, payment leaves, and required proofs",
							"recipient": "The address recipient that receives the ERC20 payments"
						}
					},
					"renounceOwnership()": {
						"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
					},
					"setActivationDelay(uint32)": {
						"details": "Only callable by the contract owner",
						"params": {
							"_activationDelay": "The new value for activationDelay"
						}
					},
					"setClaimerFor(address)": {
						"details": "Only callable by the `earner`",
						"params": {
							"claimer": "The address of the entity that can call `processClaim` on behalf of the earner"
						}
					},
					"setGlobalOperatorCommission(uint16)": {
						"details": "Only callable by the contract owner",
						"params": {
							"_globalCommissionBips": "The commission for all operators across all avss"
						}
					},
					"setPayAllForRangeSubmitter(address,bool)": {
						"details": "Only callable by the contract owner",
						"params": {
							"_newValue": "The new value for isPayAllForRangeSubmitter",
							"_submitter": "The address of the payAllForRangeSubmitter"
						}
					},
					"setPaymentUpdater(address)": {
						"details": "Only callable by the contract owner",
						"params": {
							"_paymentUpdater": "The address of the new paymentUpdater"
						}
					},
					"submitRoot(bytes32,uint32)": {
						"details": "Only callable by the paymentUpdater",
						"params": {
							"paymentCalculationEndTimestamp": "The timestamp until which payments have been calculated",
							"root": "The merkle root of the distribution"
						}
					},
					"transferOwnership(address)": {
						"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
					},
					"unpause(uint256)": {
						"details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
						"params": {
							"newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
						}
					}
				},
				"version": 1
			},
			"userdoc": {
				"kind": "user",
				"methods": {
					"CALCULATION_INTERVAL_SECONDS()": {
						"notice": "The interval in seconds at which the calculation for range payment distribution is done."
					},
					"GENESIS_PAYMENT_TIMESTAMP()": {
						"notice": "absolute min timestamp (seconds) that a payment can start at"
					},
					"MAX_FUTURE_LENGTH()": {
						"notice": "max amount of time (seconds) that a payment can start in the future"
					},
					"MAX_PAYMENT_DURATION()": {
						"notice": "The maximum amount of time (seconds) that a range payment can span over"
					},
					"MAX_RETROACTIVE_LENGTH()": {
						"notice": "max amount of time (seconds) that a payment can start in the past"
					},
					"activationDelay()": {
						"notice": "Delay in timestamp (seconds) before a posted root can be claimed against"
					},
					"beaconChainETHStrategy()": {
						"notice": "Canonical, virtual beacon chain ETH strategy"
					},
					"calculateEarnerLeafHash((address,bytes32))": {
						"notice": "return the hash of the earner's leaf"
					},
					"calculateTokenLeafHash((address,uint256))": {
						"notice": "returns the hash of the earner's token leaf"
					},
					"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": {
						"notice": "returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid"
					},
					"claimerFor(address)": {
						"notice": "Mapping: earner => the address of the entity who can call `processClaim` on behalf of the earner"
					},
					"cumulativeClaimed(address,address)": {
						"notice": "Mapping: earner => token => total amount claimed"
					},
					"currPaymentCalculationEndTimestamp()": {
						"notice": "Timestamp for last submitted DistributionRoot"
					},
					"delegationManager()": {
						"notice": "The DelegationManager contract for EigenLayer"
					},
					"distributionRoots(uint256)": {
						"notice": "list of roots submitted by the paymentUpdater"
					},
					"domainSeparator()": {
						"notice": "Getter function for the current EIP-712 domain separator for this contract."
					},
					"getRootIndexFromHash(bytes32)": {
						"notice": "loop through distribution roots from reverse and return hash"
					},
					"globalOperatorCommissionBips()": {
						"notice": "Slot 4the commission for all operators across all avss"
					},
					"isPayAllForRangeSubmitter(address)": {
						"notice": "Mapping: address => bool to check if the address is permissioned to submit payAllForRange"
					},
					"isRangePaymentForAllHash(address,bytes32)": {
						"notice": "Mapping: avs => rangePaymentForALlHash => bool to check if range payment hash for all has been submitted"
					},
					"isRangePaymentHash(address,bytes32)": {
						"notice": "Mapping: avs => rangePaymentHash => bool to check if range payment hash has been submitted"
					},
					"operatorCommissionBips(address,address)": {
						"notice": "the commission for a specific operator for a specific avs NOTE: Currently unused and simply returns the globalOperatorCommissionBips value but will be used in future release"
					},
					"pause(uint256)": {
						"notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
					},
					"pauseAll()": {
						"notice": "Alias for `pause(type(uint256).max)`."
					},
					"paused()": {
						"notice": "Returns the current paused status as a uint256."
					},
					"paused(uint8)": {
						"notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
					},
					"pauserRegistry()": {
						"notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
					},
					"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": {
						"notice": "similar to `payForRange` except the payment is split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isPayAllForRangeSubmitter mapping."
					},
					"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])": {
						"notice": "Creates a new range payment on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`"
					},
					"paymentNonce(address)": {
						"notice": "Used for unique rangePaymentHashes per AVS and for PayAllForRangeSubmitters"
					},
					"paymentUpdater()": {
						"notice": "Slot 3The address of the entity that can update the contract with new merkle roots"
					},
					"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
						"notice": "Claim payments against a given root (read from distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address."
					},
					"setActivationDelay(uint32)": {
						"notice": "Sets the delay in timestamp before a posted root can be claimed against"
					},
					"setClaimerFor(address)": {
						"notice": "Sets the address of the entity that can call `processClaim` on behalf of the earner (msg.sender)"
					},
					"setGlobalOperatorCommission(uint16)": {
						"notice": "Sets the global commission for all operators across all avss"
					},
					"setPauserRegistry(address)": {
						"notice": "Allows the unpauser to set a new pauser registry"
					},
					"setPayAllForRangeSubmitter(address,bool)": {
						"notice": "Sets the permissioned `payAllForRangeSubmitter` address which can submit payAllForRange"
					},
					"setPaymentUpdater(address)": {
						"notice": "Sets the permissioned `paymentUpdater` address which can post new roots"
					},
					"strategyManager()": {
						"notice": "The StrategyManager contract for EigenLayer"
					},
					"submitRoot(bytes32,uint32)": {
						"notice": "Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay"
					},
					"unpause(uint256)": {
						"notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
					}
				},
				"version": 1
			}
		},
		"settings": {
			"remappings": [
				"@openzeppelin-upgrades-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
				"@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
				"@openzeppelin-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
				"@openzeppelin/=lib/openzeppelin-contracts/",
				"ds-test/=lib/ds-test/src/",
				"erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
				"forge-std/=lib/forge-std/src/",
				"openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
				"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
				"openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
				"openzeppelin-contracts/=lib/openzeppelin-contracts/",
				"openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"
			],
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"metadata": {
				"bytecodeHash": "ipfs"
			},
			"compilationTarget": {
				"src/contracts/core/PaymentCoordinator.sol": "PaymentCoordinator"
			},
			"evmVersion": "london",
			"libraries": {}
		},
		"sources": {
			"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
				"keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
				"urls": [
					"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
					"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
				"keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
				"urls": [
					"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
					"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
				"keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
				"urls": [
					"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
					"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
				"keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
				"urls": [
					"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
					"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
				"urls": [
					"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
					"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
				"keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
				"urls": [
					"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
					"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
				"keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
				"urls": [
					"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
					"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
				"urls": [
					"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
					"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
				"urls": [
					"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
					"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
				"urls": [
					"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
					"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/utils/Address.sol": {
				"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
				"urls": [
					"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
					"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
				"urls": [
					"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
					"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
				],
				"license": "MIT"
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
				"keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
				"urls": [
					"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
					"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
				],
				"license": "MIT"
			},
			"src/contracts/core/PaymentCoordinator.sol": {
				"keccak256": "0x4a05f933945fd190549cc0ae7e6801556a824da950614e9663522c96ed3bd65d",
				"urls": [
					"bzz-raw://ca8f60e913f018464253dcc1f66f2f97540bff170d71965fd06be0df1486597f",
					"dweb:/ipfs/QmbjrJJQFffeoMFy8aboQAzcwUVa3V86ippvEJQFLbRDeY"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/core/PaymentCoordinatorStorage.sol": {
				"keccak256": "0xc1bf8d41688b3b94ec04cd7328836c79023d200b5ed36887a342d124898a9d7a",
				"urls": [
					"bzz-raw://db7086ae274e1add5701880431e44c0a67305b2cb437c4a7be4e5df66cbf72e9",
					"dweb:/ipfs/QmbwEkWHx13APxb1DYtkbURpL9NVFxz2Pc5rYrH1zYVXLW"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IAVSDirectory.sol": {
				"keccak256": "0x3f67ab9b510b02dc3c07014b49785f1e167401bdb39cc10f737bbf545632d938",
				"urls": [
					"bzz-raw://48d1267e2df6c8ac9b8f419269ff3d23be9b62606ee6b6d2278c27ffebfd73aa",
					"dweb:/ipfs/QmaFyywKCm1eotKjF1evryW8BMQJzPDstZm1wMRW79phXG"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IBeaconChainOracle.sol": {
				"keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
				"urls": [
					"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
					"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IDelegationManager.sol": {
				"keccak256": "0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07",
				"urls": [
					"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa",
					"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IETHPOSDeposit.sol": {
				"keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
				"urls": [
					"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
					"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
				],
				"license": "CC0-1.0"
			},
			"src/contracts/interfaces/IEigenPod.sol": {
				"keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
				"urls": [
					"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
					"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IEigenPodManager.sol": {
				"keccak256": "0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c",
				"urls": [
					"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8",
					"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IPausable.sol": {
				"keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
				"urls": [
					"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
					"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IPauserRegistry.sol": {
				"keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
				"urls": [
					"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
					"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IPaymentCoordinator.sol": {
				"keccak256": "0x399d4d6a99f8d9ca0a1f422e11d5c2c1784bd1c4118859c17cdb1fabfc0367e5",
				"urls": [
					"bzz-raw://abfa22018a78703c39c082b929ebf7b73484f8ef86c2e0264c212004f5fac8a0",
					"dweb:/ipfs/QmVqAexXLD7zbAmbrRHkmQaVjgSahnoY2XpzNvKrLLsyet"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/ISignatureUtils.sol": {
				"keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
				"urls": [
					"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
					"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/ISlasher.sol": {
				"keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
				"urls": [
					"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
					"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IStrategy.sol": {
				"keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
				"urls": [
					"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
					"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/interfaces/IStrategyManager.sol": {
				"keccak256": "0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4",
				"urls": [
					"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821",
					"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/libraries/BeaconChainProofs.sol": {
				"keccak256": "0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377",
				"urls": [
					"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7",
					"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/libraries/EIP1271SignatureUtils.sol": {
				"keccak256": "0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3",
				"urls": [
					"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373",
					"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/libraries/Endian.sol": {
				"keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
				"urls": [
					"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
					"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
				],
				"license": "BUSL-1.1"
			},
			"src/contracts/libraries/Merkle.sol": {
				"keccak256": "0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71",
				"urls": [
					"bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f",
					"dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5"
				],
				"license": "MIT"
			},
			"src/contracts/permissions/Pausable.sol": {
				"keccak256": "0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0",
				"urls": [
					"bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a",
					"dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S"
				],
				"license": "BUSL-1.1"
			}
		},
		"version": 1
	},
	"id": 104
}
